import{_ as e,c as s,o as r,ag as i}from"./chunks/framework.Zc4NuDMF.js";const k=JSON.parse('{"title":"Function: catchErrorSource()","description":"","frontmatter":{},"headers":[],"relativePath":"api/rxjs/index/catchErrorSource.md","filePath":"api/rxjs/index/catchErrorSource.md"}'),t={name:"api/rxjs/index/catchErrorSource.md"};function n(o,a,h,l,p,c){return r(),s("div",null,a[0]||(a[0]=[i('<h1 id="function-catcherrorsource" tabindex="-1">Function: catchErrorSource() <a class="header-anchor" href="#function-catcherrorsource" aria-label="Permalink to &quot;Function: catchErrorSource()&quot;">​</a></h1><blockquote><p><strong>catchErrorSource</strong>&lt;<code>Payload</code>, <code>TypePrefix</code>&gt;(<code>typePrefix</code>): (<code>source$</code>) =&gt; <code>Observable</code>&lt;<code>Payload</code> | <a href="./../../core/src/Action.html"><code>Action</code></a>&lt;<code>any</code>, <code>`${TypePrefix}.error$`</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/state-adapt/state-adapt/blob/4ff8540684d6d76a52452612f8fa44ffd7c6016a/libs/rxjs/src/lib/sources/catch-error-source.operator.ts#L24" target="_blank" rel="noreferrer">libs/rxjs/src/lib/sources/catch-error-source.operator.ts:24</a></p><p><code>catchErrorSource</code> is a custom RxJS <a href="https://rxjs.dev/guide/operators" target="_blank" rel="noreferrer">operator</a> that converts an RxJS <a href="https://rxjs.dev/guide/observable" target="_blank" rel="noreferrer">Observable</a> of any values into a source of errors, using RxJS&#39; <a href="https://rxjs.dev/api/operators/catchError" target="_blank" rel="noreferrer">catchError</a> operator. It takes one argument, <a href="#catcherrorsourcetypeprefix">TypePrefix</a>, and prefixes it to create an object of type <a href="./../../core/src/Action.html">Action</a>&lt;any, ${<a href="#catcherrorsourcetypeprefix">TypePrefix</a>}.error$&gt;.</p><h4 id="example-catching-errors-from-a-source" tabindex="-1">Example: Catching errors from a source <a class="header-anchor" href="#example-catching-errors-from-a-source" aria-label="Permalink to &quot;Example: Catching errors from a source&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">timer</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">map</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;rxjs&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;"> timer$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">timer</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">1000</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">).</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">pipe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span></span>\n<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  map</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">n</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> =&gt;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> ({ </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">type</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;timer$&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">payload</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> n</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">fakeNumberMethod</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">() })),</span></span>\n<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  catchErrorSource</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;">&#39;timer&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">),</span></span>\n<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">timer$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">subscribe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">console</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">log</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>\n<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;timer.error$&#39;, payload: &#39;Error: n.fakeNumberMethod is not a function&#39; }</span></span></code></pre></div><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="payload" tabindex="-1">Payload <a class="header-anchor" href="#payload" aria-label="Permalink to &quot;Payload&quot;">​</a></h3><p><code>Payload</code></p><h3 id="typeprefix" tabindex="-1">TypePrefix <a class="header-anchor" href="#typeprefix" aria-label="Permalink to &quot;TypePrefix&quot;">​</a></h3><p><code>TypePrefix</code> <em>extends</em> <code>string</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="typeprefix-1" tabindex="-1">typePrefix <a class="header-anchor" href="#typeprefix-1" aria-label="Permalink to &quot;typePrefix&quot;">​</a></h3><p><code>TypePrefix</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>(<code>source$</code>): <code>Observable</code>&lt;<code>Payload</code> | <a href="./../../core/src/Action.html"><code>Action</code></a>&lt;<code>any</code>, <code>`${TypePrefix}.error$`</code>&gt;&gt;</p></blockquote><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><h4 id="source" tabindex="-1">source$ <a class="header-anchor" href="#source" aria-label="Permalink to &quot;source$&quot;">​</a></h4><p><code>Observable</code>&lt;<code>Payload</code>&gt;</p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>Observable</code>&lt;<code>Payload</code> | <a href="./../../core/src/Action.html"><code>Action</code></a>&lt;<code>any</code>, <code>`${TypePrefix}.error$`</code>&gt;&gt;</p>',21)]))}const y=e(t,[["render",n]]);export{k as __pageData,y as default};
