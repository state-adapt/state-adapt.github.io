{"version":3,"sources":["./libs/core/src/lib/create-state-adapt.funciton.ts","./apps/docs/src/app/getting-started/getting-started.md","./libs/adapter-docs/src/lib/adapter-docs-state.interface.ts","./libs/core/src/lib/http/get-http-sources.function.ts","./libs/core/src/lib/adapt.reducer.ts","./libs/core/src/lib/http/get-http-error.function.ts","./libs/core/src/lib/create-store.function.ts","./apps/docs/src/app/concepts/overview.component.ts","./libs/core/src/lib/get-action.function.ts","./libs/adapter-docs/src/lib/get-diff-html.function.ts","./libs/core/src/lib/create-adapt-nested-reducer.function.ts","./apps/docs/src/app/concepts/stores.component.ts","./apps/docs/src/main.ts","./apps/docs/src/app/getting-started/getting-started.component.ts","./libs/core/src/lib/create-reactions.function.ts","./apps/docs/src/app/intro/intro.md","./libs/core/src/lib/adapt.store.ts","./apps/docs/src/app/adapters/basic.adapter.ts","./libs/core/src/index.ts","./apps/docs/src/app/demos/demos.component.ts","./libs/core/src/lib/join-selectors.function.ts","./libs/core/src/lib/source.ts","./libs/core/src/lib/state-sanitizer.function.ts","./libs/core/src/lib/to-source.operator.ts","./apps/docs/src/app/adapters/create-basic-adapter-docs.const.ts","./apps/docs/src/app/concepts/overview.md","./libs/core/src/lib/action-sanitizer.function.ts","./apps/docs/src/app/circuits/circuits.component.ts","./apps/docs/src/app/circuits/circuits.component.html","./libs/adapter-docs/src/lib/adapter-docs.component.ts","./apps/docs/src/app/concepts/stores.md","./apps/docs/src/app/concepts/nav-tile.component.ts","./apps/docs/src/app/content.component.ts","./libs/adapter-docs/src/lib/adapter-docs.interface.ts","./libs/core/src/lib/create-basic-adapter.function.ts","./apps/docs/src/app/get-marked-options.function.ts","./libs/core/src/lib/join.function.ts","./libs/core/src/lib/create-adapter.function.ts","./apps/docs/src/environments/environment.ts","./apps/docs/src/app/concepts/thinking-reactively.md","./libs/core/src/lib/http/get-catch-http-error.function.ts","./apps/docs/src/app/app.module.ts","./apps/docs/src/app/adapters/adapters-core.component.ts","webpack:///./libs/core/src/lib/create-basic-adapter.function.ts?8715","./apps/docs/src/app/concepts/sources.md","./libs/adapter-docs/src/lib/adapter-docs.module.ts","./libs/core/src/lib/create-selectors.function.ts","./libs/core/src/lib/split-sources.function.ts","./apps/docs/src/app/concepts/adapters.component.ts","./libs/core/src/lib/adapt.actions.ts","./libs/adapter-docs/src/lib/docs.adapter.ts","./apps/docs/src/app/app-routing.module.ts","./apps/docs/src/app/intro/intro.component.ts","./apps/docs/src/app/intro/intro.component.html","webpack:///./apps/docs/src/app/adapters/basic.adapter.ts?b1e4","./apps/docs/src/app/concepts/thinking-reactively.component.ts","./libs/core/src/lib/update-paths.function.ts","./apps/docs/src/app/app.component.ts","./apps/docs/src/app/app.component.html","./libs/adapter-docs/src/index.ts","./apps/docs/src/app/concepts/adapters.md","./libs/core/src/lib/adapt.ts","./apps/docs/src/app/concepts/sources.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { AdaptCommon } from './adapt';\nimport { AdaptStore, ObservableStore } from './adapt.store';\n\nexport function createStateAdapt<\n  State,\n  AnyAction,\n  Store extends ObservableStore<State, AnyAction>\n>(store: Store) {\n  const adaptStore = new AdaptStore<any, AnyAction, any, Store>(store);\n  return new AdaptCommon(adaptStore);\n}\n","export default \"# Getting Started\\n\\nSet up StateAdapt with\\n\\n- [Angular](#angular)\\n- [Angular and NgRx](#angular-and-ngrx)\\n- [Angular and NGXS](#angular-and-ngxs)\\n- [React](#react)\\n- [React and Redux](#react-and-redux)\\n\\n## Angular\\n\\n[StackBlitz Demo](https://stackblitz.com/github/state-adapt/state-adapt/tree/stackblitz-ng-sa-counter?file=apps%2Fng-sa-counter%2Fsrc%2Fapp%2Fapp.module.ts)\\n\\nFirst, `npm install`:\\n\\n```\\nnpm i -s @state-adapt/core reselect\\n```\\n\\nInclude in app.module.ts like so:\\n\\n```typescript\\nimport {\\n  createStore,\\n  actionSanitizer,\\n  stateSanitizer,\\n  AdaptCommon,\\n} from '@state-adapt/core';\\n// ...\\n// Create the Adapt store:\\nconst enableReduxDevTools = (window as any).__REDUX_DEVTOOLS_EXTENSION__?.({\\n  actionSanitizer,\\n  stateSanitizer,\\n});\\n// ...\\n// Provide it:\\n    providers: [{provide: AdaptCommon, useValue: createStore(enableReduxDevTools)}],\\n```\\n\\nNow you can use it in a component or service. Here's an example in a component:\\n\\n```typescript\\nimport { Source, createAdapter, AdaptCommon } from '@state-adapt/core';\\n...\\n  newStr$ = new Source<string>('newStr$');\\n  stringAdapter = createAdapter<string>()({\\n    append: (state, newStr: string) => state + newStr,\\n  });\\n  stringStore = this.adapt.init(['string', this.stringAdapter, ''], {\\n    append: this.newStr$,\\n  });\\n  str$ = this.stringStore.getState();\\n  constructor(private adapt: AdaptCommon<any>) {\\n    this.str$.subscribe();\\n    setTimeout(() => this.newStr$.next('Hello World!'), 3000);\\n  }\\n...\\n```\\n\\nOpen up Redux Devtools and you should see the state update after 3 seconds.\\n\\n## Angular and NgRx\\n\\n[StackBlitz Demo](https://stackblitz.com/github/state-adapt/state-adapt/tree/stackblitz-ng-sa-ngrx-counter?file=apps%2Fng-sa-ngrx-counter%2Fsrc%2Fapp%2Fapp.module.ts)\\n\\nFirst, `npm install`:\\n\\n```\\nnpm i -s @state-adapt/core @state-adapt/ngrx reselect\\n```\\n\\nInclude in your app.module.ts like so:\\n\\n```typescript\\nimport { StoreModule } from '@ngrx/store';\\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\\nimport {\\n  adaptReducer,\\n  actionSanitizer,\\n  stateSanitizer,\\n} from '@state-adapt/core';\\n// ...\\n// In your module imports array:\\n    StoreModule.forRoot({ adapt: adaptReducer }),\\n    StoreDevtoolsModule.instrument({\\n      maxAge: 25,\\n      logOnly: environment.production,\\n      actionSanitizer,\\n      stateSanitizer,\\n    }),\\n```\\n\\nNow you can use it in a component or service. Here's an example in a component:\\n\\n```typescript\\nimport { Source, createAdapter } from '@state-adapt/core';\\nimport { Adapt } from '@state-adapt/ngrx';\\n...\\n  newStr$ = new Source<string>('newStr$');\\n  stringAdapter = createAdapter<string>()({\\n    append: (state, newStr: string) => state + newStr,\\n  });\\n  stringStore = this.adapt.init(['string', this.stringAdapter, ''], {\\n    append: this.newStr$,\\n  });\\n  str$ = this.stringStore.getState();\\n  constructor(private adapt: Adapt) {\\n    this.str$.subscribe();\\n    setTimeout(() => this.newStr$.next('Hello World!'), 3000);\\n  }\\n...\\n```\\n\\nOpen up Redux Devtools and you should see the state update after 3 seconds.\\n\\n## Angular and NGXS\\n\\n[StackBlitz Demo](https://stackblitz.com/github/state-adapt/state-adapt/tree/stackblitz-ng-sa-ngxs-counter?file=apps%2Fng-sa-ngxs-counter%2Fsrc%2Fapp%2Fapp.module.ts)\\n\\nFirst, `npm install`:\\n\\n```\\nnpm i -s @state-adapt/core @state-adapt/ngxs reselect\\n```\\n\\nInclude in your app.module.ts like so:\\n\\n```typescript\\nimport { NgxsModule } from '@ngxs/store';\\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\\nimport { actionSanitizer, stateSanitizer } from '@state-adapt/core';\\nimport { AdaptState } from '@state-adapt/ngxs';\\n// ...\\n// In your module imports array:\\n    NgxsModule.forRoot([AdaptState], {\\n      developmentMode: !environment.production\\n    }),\\n    NgxsReduxDevtoolsPluginModule.forRoot({\\n      disabled: environment.production,\\n      actionSanitizer,\\n      stateSanitizer,\\n    }),\\n```\\n\\nNow you can use it in a component or service. Here's an example in a component:\\n\\n```typescript\\nimport { Source, createAdapter } from '@state-adapt/core';\\nimport { Adapt } from '@state-adapt/ngxs';\\n...\\n  newStr$ = new Source<string>('newStr$');\\n  stringAdapter = createAdapter<string>()({\\n    append: (state, newStr: string) => state + newStr,\\n  });\\n  stringStore = this.adapt.init(['string', this.stringAdapter, ''], {\\n    append: this.newStr$,\\n  });\\n  str$ = this.stringStore.getState();\\n  constructor(private adapt: Adapt) {\\n    this.str$.subscribe();\\n    setTimeout(() => this.newStr$.next('Hello World!'), 3000);\\n  }\\n...\\n```\\n\\nOpen up Redux Devtools and you should see the state update after 3 seconds.\\n\\n# React\\n\\n[StackBlitz Demo](https://stackblitz.com/edit/state-adapt-react)\\n\\nFirst, `npm install`:\\n\\n```\\nnpm i -s @state-adapt/core @state-adapt/react\\n```\\n\\nDefine your adapt store:\\n\\n```typescript\\nimport {\\n  actionSanitizer,\\n  stateSanitizer,\\n  createStore,\\n} from '@state-adapt/core';\\n\\nconst enableReduxDevTools = (window as any).__REDUX_DEVTOOLS_EXTENSION__?.({\\n  actionSanitizer,\\n  stateSanitizer,\\n});\\nexport const adapt = createStore(enableReduxDevTools);\\n```\\n\\nProvide StateAdapt in your app context:\\n\\n```tsx\\nimport { AdaptContext } from '@state-adapt/react';\\nimport { adapt, store } from './store';\\n// ...\\n  <AdaptContext.Provider value={adapt}>\\n    <React.StrictMode>\\n      <App />\\n    </React.StrictMode>\\n  </AdaptContext.Provider>,\\n```\\n\\nAnd now you can use it in your components:\\n\\n```tsx\\nimport { createAdapter } from '@state-adapt/core';\\nimport { useSource, useAdapter, useObservable } from '@state-adapt/react';\\n\\nconst stringAdapter = createAdapter<string>()({\\n  append: (state, newStr: string) => state + newStr,\\n});\\n\\nexport function App() {\\n  const newStr$ = useSource<string>('newStr$');\\n  const stringStore = useAdapter(['string', stringAdapter, ''], {\\n    append: this.newStr$,\\n  });\\n  cost str$ = stringStore.getState();\\n  const str = useObservable(str$);\\n\\n  return (\\n    <h1>{str}</h1>\\n    <button onClick={() => newStr$.next('new string ')}>New String</button>\\n  )\\n}\\n```\\n\\n# React and Redux\\n\\n[StackBlitz Demo](https://stackblitz.com/edit/state-adapt-react-with-redux)\\n\\nFirst, `npm install`:\\n\\n```\\nnpm i -s @state-adapt/core @state-adapt/react\\n```\\n\\nDefine your Redux store:\\n\\n```typescript\\nimport {\\n  adaptReducer,\\n  actionSanitizer,\\n  stateSanitizer,\\n  createStateAdapt,\\n} from '@state-adapt/core';\\nimport { combineReducers, createStore } from 'redux';\\n\\nconst enableReduxDevTools = (window as any).__REDUX_DEVTOOLS_EXTENSION__?.({\\n  actionSanitizer,\\n  stateSanitizer,\\n});\\n\\nexport const store = createStore(\\n  combineReducers({\\n    adapt: adaptReducer,\\n    // Any other reducers you have with Redux\\n  }),\\n  enableReduxDevTools,\\n);\\nexport const adapt = createStateAdapt(store);\\n```\\n\\nProvide StateAdapt in your app context:\\n\\n```tsx\\nimport { Provider } from 'react-redux';\\nimport { AdaptContext } from '@state-adapt/react';\\nimport { adapt, store } from './store';\\n// ...\\n  <AdaptContext.Provider value={adapt}>\\n    <Provider store={store}>\\n      <React.StrictMode>\\n        <App />\\n      </React.StrictMode>\\n    </Provider>\\n  </AdaptContext.Provider>,\\n```\\n\\nAnd now you can use it in your components:\\n\\n```tsx\\nimport { createAdapter } from '@state-adapt/core';\\nimport { useSource, useAdapter, useObservable } from '@state-adapt/react';\\n\\nconst stringAdapter = createAdapter<string>()({\\n  append: (state, newStr: string) => state + newStr,\\n});\\n\\nexport function App() {\\n  const newStr$ = useSource<string>('newStr$');\\n  const stringStore = useAdapter(['string', stringAdapter, ''], {\\n    append: this.newStr$,\\n  });\\n  cost str$ = stringStore.getState();\\n  const str = useObservable(str$);\\n\\n  return (\\n    <h1>{str}</h1>\\n    <button onClick={() => newStr$.next('new string ')}>New String</button>\\n  )\\n}\\n```\\n\";","import { AdapterDocs, defaultAdapterDocs } from './adapter-docs.interface';\n\nexport const INITIAL_STATE = 'INITIAL_STATE';\n\nexport interface HistoryItem {\n  inputs: {\n    state: any;\n    payload: string;\n    initialState: any;\n    stateChangeName: string;\n  };\n  state: any;\n  selected: boolean;\n}\n\nexport interface AdapterDocsState {\n  docs: AdapterDocs;\n  selectedStateChange: string;\n  payloadEditorRefreshRequired: boolean;\n  selectedSelector: string;\n  payload: string;\n  demoHistory: HistoryItem[];\n  demoState: any;\n}\n\nexport const initialState: AdapterDocsState = {\n  docs: defaultAdapterDocs,\n  selectedStateChange: '',\n  payloadEditorRefreshRequired: true,\n  selectedSelector: '',\n  payload: '',\n  demoHistory: [],\n  demoState: INITIAL_STATE,\n};\n","import { concat, Observable, of } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nimport { getAction } from '../get-action.function';\nimport { splitSources } from '../split-sources.function';\nimport { getCatchHttpError } from './get-catch-http-error.function';\n\nexport function getHttpSources<Res, Body, Err>(\n  feature: string,\n  http$: Observable<Res>,\n  getResponse: (res: Res) => [boolean, Body, Err],\n) {\n  const httpWithSources$ = concat(\n    of(getAction('Request')),\n    http$.pipe(\n      map(res => {\n        const [succeeded, body, err] = getResponse(res);\n        return succeeded ? getAction('Success', body) : getAction('Error', err);\n      }),\n      getCatchHttpError('Error'),\n      share(),\n    ),\n  );\n  const sources = splitSources(httpWithSources$, {\n    request$: 'Request',\n    success$: 'Success',\n    error$: 'Error',\n  });\n  return {\n    request$: sources.request$.pipe(\n      map(({ type }) => ({ type: `${feature} ${type}` })),\n    ),\n    success$: sources.success$.pipe(\n      map(({ type, payload }) => ({ type: `${feature} ${type}`, payload })),\n    ),\n    error$: sources.error$.pipe(\n      map(({ type, payload }) => ({ type: `${feature} ${type}`, payload })),\n    ),\n  };\n}\n","import { CommonAction, isPatchState, PatchState } from './adapt.actions';\nimport { updatePaths } from './update-paths.function';\n\nexport interface AdaptModel {\n  [index: string]: any;\n}\n\nexport function adaptReducer(\n  state: AdaptModel | null = null,\n  action: PatchState | CommonAction,\n) {\n  return isPatchState(action) ? updatePaths(state, action.payload) : action;\n}\n","import { of } from 'rxjs';\nimport { getAction } from '../get-action.function';\n\nexport function getHttpError<Type extends string>(type: Type) {\n  return (err: string) => of(getAction(type, err));\n}\n","import { createStateAdapt } from './create-state-adapt.funciton';\nimport { createAdaptNestedReducer } from './create-adapt-nested-reducer.function';\nimport { adaptReducer } from './adapt.reducer';\n\nfunction createReduxLikeStore(\n  reducer: any,\n  preloadedState: any,\n  enhancer: any,\n) {\n  let state = preloadedState ?? undefined;\n  const listeners: any[] = [];\n\n  if (enhancer) {\n    return enhancer(createReduxLikeStore)(reducer, state);\n  }\n\n  const dispatch = (action: any) => {\n    state = reducer(state, action);\n    listeners.forEach(l => l(state));\n  };\n\n  dispatch({ type: '@@redux/INIT' + Math.random() });\n\n  return {\n    getState: () => state,\n    dispatch,\n    subscribe: (cb: () => void) => {\n      listeners.push(cb);\n      return () => listeners.splice(listeners.indexOf(cb), 1);\n    },\n  };\n}\n\nexport function createStore(enhancer: any, preloadedState: any = null) {\n  const store = createReduxLikeStore(\n    createAdaptNestedReducer(adaptReducer),\n    preloadedState,\n    enhancer,\n  );\n  return createStateAdapt(store);\n}\n","import { Component } from '@angular/core';\nimport md from 'raw-loader!./overview.md';\n\n@Component({\n  selector: 'state-adapt-concepts-overview',\n  template: `\n    <state-adapt-content>\n      <markdown [data]=\"md\"></markdown>\n      <state-adapt-nav-tile [right]=\"true\" link=\"/concepts/sources\">\n        Sources\n      </state-adapt-nav-tile>\n    </state-adapt-content>\n  `,\n})\nexport class ConceptsOverviewComponent {\n  md = md;\n}\n","export function getAction<Type extends string>(type: Type): { type: Type };\n\nexport function getAction<Type extends string, Payload>(\n  type: Type,\n  payload: Payload,\n): { type: Type; payload: Payload };\n\nexport function getAction<Type extends string, Payload>(\n  type: Type,\n  payload?: Payload,\n) {\n  return { type, payload };\n}\n","import * as jdp from 'jsondiffpatch';\ntype ValueDiff = [any] | [any, any] | [any, 0, 0];\n\nexport function getDiffHtml(obj1: any, obj2: any) {\n  return getDeltaJson(jdp.diff(obj1, obj2) as jdp.Delta);\n}\n\nexport function toJson(val: any): string {\n  return JSON.stringify(val, null, '\\t');\n}\n\nfunction getTabs(n: number) {\n  return new Array(n).fill('    ').join('');\n}\n\nfunction getDeltaJson(val: jdp.Delta, indent = 0): string {\n  if (val === undefined) return '';\n  const isArray = Array.isArray(val);\n  const isDiffOfArray = val?._t === 'a';\n  const isDiff = isArray || isDiffOfArray;\n  if (!isDiff) return getObjectDeltaJson(val, indent);\n  return isDiffOfArray\n    ? getArrayDiffString(val as any, indent)\n    : getValueDiffString(val as ValueDiff);\n}\n\nfunction getObjectDeltaJson(val: jdp.Delta, indent: number) {\n  return (\n    Object.entries(val).reduce(\n      (objStr, [key, value]) =>\n        `${objStr}\\n${getTabs(indent + 1)}${key}: ${getDeltaJson(\n          value,\n          indent + 1,\n        )},`,\n      '{',\n    ) + `\\n${getTabs(indent)}}`\n  );\n}\n\nfunction getArrayDiffString(val: jdp.Delta, indent: number) {\n  return (\n    Object.entries(val)\n      .filter(([key, value]) => key !== '_t' && value !== 'a')\n      .reduce((arrStr, [key, value]) => {\n        const keyNumber = key.replace(/_/, '');\n\n        const isMoved = value[0] === '' && value[2] === 3;\n        const movedKey = isMoved ? getDiffArrow(+keyNumber, +value[1]) : '';\n        const movedValue = ''; // Doesn't show what the element was\n\n        const isAdded = key === keyNumber;\n        const addedKey = isAdded ? getAdded(+keyNumber) : '';\n        const addedValue = isAdded ? getAdded(value[0]) : '';\n\n        const isRemoved = key !== keyNumber && !isMoved;\n        const removedKey = isRemoved ? getRemoved(+keyNumber) : '';\n        const removedValue = isRemoved ? getRemoved(value[0]) : '';\n\n        const keyStr = movedKey + addedKey + removedKey;\n        const valueStr = movedValue + addedValue + removedValue;\n        const separator = valueStr ? ': ' : '';\n        return `${arrStr}\\n${getTabs(\n          indent + 1,\n        )}${keyStr}${separator}${valueStr},`;\n      }, `[`) + `\\n${getTabs(indent)}]`\n  );\n}\n\nfunction wrapSpanClass(val: any, className: string) {\n  return `<span class=\"${className}\">${toJson(val)}</span>`;\n}\n\nfunction getDiffArrow(val1: any, val2: any) {\n  return `${getRemoved(val1)} => ${getAdded(val2)}`;\n}\n\nfunction getRemoved(val: any) {\n  return wrapSpanClass(val, 'removed');\n}\n\nfunction getAdded(val: any) {\n  return wrapSpanClass(val, 'added');\n}\n\nconst lengthTypes = {\n  1: (val: ValueDiff) => getAdded(val[0]),\n  2: (val: ValueDiff) => getDiffArrow(val[0], val[1]),\n  3: (val: ValueDiff) => getRemoved(val[0]),\n};\n\nfunction getValueDiffString(val: ValueDiff) {\n  return lengthTypes[val.length](val);\n}\n","export function createAdaptNestedReducer(\n  adaptReducer: (state: any, action: any) => any,\n) {\n  return (state: { adapt: any }, action: any) => {\n    const newState = adaptReducer(state?.adapt, action);\n    if (newState === state) {\n      return state;\n    }\n    return {\n      ...state,\n      adapt: newState,\n    };\n  };\n}\n","import { Component } from '@angular/core';\nimport md from 'raw-loader!./stores.md';\n\n@Component({\n  selector: 'state-adapt-stores',\n  template: `\n    <state-adapt-content>\n      <markdown [data]=\"md\"></markdown>\n      <state-adapt-nav-tile link=\"/concepts/adapters\">\n        Adapters\n      </state-adapt-nav-tile>\n      <state-adapt-nav-tile [right]=\"true\" link=\"/concepts/thinking-reactively\">\n        Thinking Reactively\n      </state-adapt-nav-tile>\n    </state-adapt-content>\n  `,\n})\nexport class StoresComponent {\n  md = md;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component } from '@angular/core';\nimport md from 'raw-loader!./getting-started.md';\n\n@Component({\n  selector: 'state-adapt-getting-started',\n  template: `\n    <state-adapt-content>\n      <markdown [data]=\"md\"></markdown>\n    </state-adapt-content>\n  `,\n})\nexport class GettingStartedComponent {\n  md = md;\n}\n","import { Reactions } from './reactions.interface';\n\nexport function createReactions<State>() {\n  return <S extends Reactions<State>>(getReactions: () => S) => getReactions();\n}\n","export default \"# Why StateAdapt?\\n\\n## Minimal\\n\\nStateAdapt achieves the original intent of Redux, but in a much more\\nminimal way. StateAdapt turns Actions into RxJS Subjects and reducers into\\nobjects, reducing conceptual complexity and eliminating ~40% of the code\\nrequired to create event sources and state changes.\\n\\n## Reactive\\n\\nStateAdapt relies on RxJS for all unidirectional data flow. Rather than\\nremoving pieces of Redux critical to reactivity, as most alternatives do,\\nStateAdapt simply reimplements them in RxJS.\\n\\n## Reusable\\n\\nStateAdapt uses state adapters to maximize reusability in state management.\\n\\n# Learn More\\n\\nRead: [Introducing StateAdapt](https://medium.com/weekly-webtips/introducing-stateadapt-reusable-reactive-state-management-9f0388f1850e)\\n\\n# Contribute\\n\\nWant to help out? See our [GitHub repo](https://github.com/state-adapt/state-adapt)\\n\";","import { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nexport interface ObservableStore<State, AnyAction> {\n  subscribe: (observer: any) => void;\n  getState: () => State;\n  dispatch: (action: AnyAction) => void;\n}\n\nexport class AdaptStore<\n  State,\n  AnyAction,\n  Action extends AnyAction,\n  Store extends ObservableStore<State, AnyAction>\n> extends BehaviorSubject<State> {\n  store: Store;\n\n  constructor(store: Store) {\n    super(store.getState());\n    this.store = store;\n    store.subscribe(() => this.next(store.getState()));\n  }\n\n  select<T>(sel: (s: State) => T) {\n    return this.pipe(\n      filter(state => state !== undefined),\n      map(state => sel(state)),\n      filter(state => state !== undefined),\n      distinctUntilChanged(),\n    );\n  }\n\n  dispatch(action: Action) {\n    return this.store.dispatch(action);\n  }\n}\n","import { createBasicAdapter } from '@state-adapt/core';\n\ninterface DemoState {\n  prop1: string;\n  prop2: string;\n}\n\nexport const basicAdapter = createBasicAdapter<DemoState>();\n","export * from './lib/update-paths.function';\nexport * from './lib/adapt.actions';\nexport * from './lib/action-sanitizer.function';\nexport * from './lib/state-sanitizer.function';\nexport * from './lib/action.interface';\nexport * from './lib/split-sources.function';\nexport * from './lib/get-action.function';\nexport * from './lib/to-source.operator';\nexport * from './lib/http/get-http-error.function';\nexport * from './lib/http/get-catch-http-error.function';\nexport * from './lib/http/get-http-sources.function';\n\nexport * from './lib/selectors.interface';\nexport * from './lib/reactions.interface';\nexport * from './lib/second-parameter-or-any.type';\nexport * from './lib/second-parameter-or-void.type';\nexport * from './lib/sources.type';\nexport * from './lib/selections.type';\nexport * from './lib/mini-store.interface';\nexport * from './lib/adapter.type';\nexport * from './lib/create-selectors.function';\nexport * from './lib/create-reactions.function';\nexport * from './lib/create-adapter.function';\nexport * from './lib/create-basic-adapter.function';\nexport * from './lib/source';\nexport * from './lib/join-selectors.function';\nexport * from './lib/join.function';\n\nexport * from './lib/adapt.reducer';\nexport * from './lib/adapt.store';\nexport * from './lib/create-state-adapt.funciton';\nexport * from './lib/adapt';\nexport * from './lib/create-store.function';\n","import { Component } from '@angular/core';\n\ninterface Demo {\n  title: string;\n  href: string;\n  img: string;\n  features: string[];\n}\n\n@Component({\n  selector: 'state-adapt-demos',\n  template: `\n    <state-adapt-content>\n      <h1>Demos</h1>\n      <div class=\"demo-tiles-container\">\n        <ibm-clickable-tile\n          *ngFor=\"let demo of demos\"\n          [href]=\"demo.href\"\n          target=\"_blank\"\n        >\n          <div>\n            <h3>{{ demo.title }}</h3>\n            <ol>\n              <li *ngFor=\"let feature of demo.features\">{{ feature }}</li>\n            </ol>\n          </div>\n          <img [src]=\"demo.img\" />\n        </ibm-clickable-tile>\n      </div>\n    </state-adapt-content>\n  `,\n  styles: [\n    `\n      .demo-tiles-container {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 20px;\n        padding-top: 20px;\n      }\n      .demo-tiles-container ibm-clickable-tile {\n        width: calc(50% - 10px);\n      }\n      ::ng-deep .demo-tiles-container ibm-clickable-tile a {\n        height: 360px;\n        display: flex;\n        justify-content: space-between;\n        flex-direction: column;\n      }\n      .demo-tiles-container ibm-clickable-tile img {\n        width: 100%;\n        max-height: 60%;\n      }\n      .demo-tiles-container ibm-clickable-tile h3 {\n        margin-top: 0em;\n      }\n      .demo-tiles-container ibm-clickable-tile ol {\n        margin-top: 0.4em;\n      }\n    `,\n  ],\n})\nexport class DemosComponent {\n  demos: Demo[] = [\n    {\n      title: 'Angular Reactive Forms with NgRx',\n      href:\n        'https://stackblitz.com/edit/angular-reactive-forms-state-management?file=src%2Fapp%2Fform%2Fstate-adapt-form.component.ts',\n      img: '../../assets/ngrx-forms-screenshot.png',\n      features: ['NgRx', 'Angular Reactive Forms'],\n    },\n    {\n      title: 'Shopping Cart',\n      href:\n        'https://stackblitz.com/github/state-adapt/state-adapt/tree/stackblitz-ng-sa-shopping?file=apps%2Fng-sa-shopping%2Fsrc%2Fapp%2Fapp.component.ts',\n      img: '../../assets/shopping-screenshot.png',\n      features: [\n        '2 state adapters',\n        '3 mini-stores, 2 using the same adapter',\n        '1 use of `joinSelectors` (for joining stores)',\n      ],\n    },\n  ];\n}\n","import { createSelector } from 'reselect';\nimport { merge, using } from 'rxjs';\nimport { AnySelectors } from './any-selectors.interface';\nimport { JoinedMiniStore } from './joined-mini-store.interface';\nimport { JoinedSelectors } from './joined-selectors.type';\nimport { MiniStore } from './mini-store.interface';\nimport { Selectors } from './selectors.interface';\nimport { StoreLike } from './store-like.type';\n\ntype SelectorKey<\n  State,\n  S extends Selectors<State>,\n  AS extends AnySelectors\n> = keyof StoreLike<State, S, AS>['_fullSelectors'];\n\ntype StoreSelectorInput<\n  State,\n  S extends Selectors<State>,\n  AS extends AnySelectors,\n  SelectorKey1 extends SelectorKey<State, S, AS> = 'state'\n> = StoreLike<State, S, AS> | [StoreLike<State, S, AS>, SelectorKey1];\n\nexport function joinSelectors<\n  State1,\n  State2,\n  S1 extends Selectors<State1>,\n  S2 extends Selectors<State2>,\n  AS1 extends AnySelectors,\n  AS2 extends AnySelectors,\n  SelectorKey1 extends SelectorKey<State1, S1, AS1> = 'state',\n  SelectorKey2 extends SelectorKey<State2, S2, AS2> = 'state',\n  ReturnState1 extends ReturnType<\n    StoreLike<State1, S1, AS1>['_fullSelectors'][SelectorKey1]\n  > = ReturnType<StoreLike<State1, S1, AS1>['_fullSelectors'][SelectorKey1]>,\n  ReturnState2 extends ReturnType<\n    StoreLike<State2, S2, AS2>['_fullSelectors'][SelectorKey2]\n  > = ReturnType<StoreLike<State2, S2, AS2>['_fullSelectors'][SelectorKey2]>,\n  NewS extends AnySelectors = AnySelectors,\n  NewState = any\n>(\n  selectorInput1: StoreSelectorInput<State1, S1, AS1, SelectorKey1>,\n  selectorInput2: StoreSelectorInput<State2, S2, AS2, SelectorKey2>,\n  newSelector: (s1: ReturnState1, s2: ReturnState2) => NewState,\n): JoinedMiniStore<any, JoinedSelectors<NewS, NewState>>;\n\nexport function joinSelectors<\n  State1,\n  State2,\n  State3,\n  S1 extends Selectors<State1>,\n  S2 extends Selectors<State2>,\n  S3 extends Selectors<State3>,\n  AS1 extends AnySelectors,\n  AS2 extends AnySelectors,\n  AS3 extends AnySelectors,\n  SelectorKey1 extends SelectorKey<State1, S1, AS1> = 'state',\n  SelectorKey2 extends SelectorKey<State2, S2, AS2> = 'state',\n  SelectorKey3 extends SelectorKey<State3, S3, AS3> = 'state',\n  ReturnState1 extends ReturnType<\n    StoreLike<State1, S1, AS1>['_fullSelectors'][SelectorKey1]\n  > = ReturnType<StoreLike<State1, S1, AS1>['_fullSelectors'][SelectorKey1]>,\n  ReturnState2 extends ReturnType<\n    StoreLike<State2, S2, AS2>['_fullSelectors'][SelectorKey2]\n  > = ReturnType<StoreLike<State2, S2, AS2>['_fullSelectors'][SelectorKey2]>,\n  ReturnState3 extends ReturnType<\n    StoreLike<State3, S3, AS3>['_fullSelectors'][SelectorKey3]\n  > = ReturnType<StoreLike<State3, S3, AS3>['_fullSelectors'][SelectorKey3]>,\n  NewS extends AnySelectors = AnySelectors,\n  NewState = any\n>(\n  selectorInput1: StoreSelectorInput<State1, S1, AS1, SelectorKey1>,\n  selectorInput2: StoreSelectorInput<State2, S2, AS2, SelectorKey2>,\n  selectorInput3: StoreSelectorInput<State3, S3, AS3, SelectorKey3>,\n  newSelector: (s1: ReturnState1, s2: ReturnState2, s3: ReturnState3) => NewState,\n): JoinedMiniStore<any, JoinedSelectors<NewS, NewState>>;\n\nexport function joinSelectors<\n  State1,\n  State2,\n  State3,\n  State4,\n  S1 extends Selectors<State1>,\n  S2 extends Selectors<State2>,\n  S3 extends Selectors<State3>,\n  S4 extends Selectors<State4>,\n  AS1 extends AnySelectors,\n  AS2 extends AnySelectors,\n  AS3 extends AnySelectors,\n  AS4 extends AnySelectors,\n  SelectorKey1 extends SelectorKey<State1, S1, AS1> = 'state',\n  SelectorKey2 extends SelectorKey<State2, S2, AS2> = 'state',\n  SelectorKey3 extends SelectorKey<State3, S3, AS3> = 'state',\n  SelectorKey4 extends SelectorKey<State4, S4, AS4> = 'state',\n  ReturnState1 extends ReturnType<\n    StoreLike<State1, S1, AS1>['_fullSelectors'][SelectorKey1]\n  > = ReturnType<StoreLike<State1, S1, AS1>['_fullSelectors'][SelectorKey1]>,\n  ReturnState2 extends ReturnType<\n    StoreLike<State2, S2, AS2>['_fullSelectors'][SelectorKey2]\n  > = ReturnType<StoreLike<State2, S2, AS2>['_fullSelectors'][SelectorKey2]>,\n  ReturnState3 extends ReturnType<\n    StoreLike<State3, S3, AS3>['_fullSelectors'][SelectorKey3]\n  > = ReturnType<StoreLike<State3, S3, AS3>['_fullSelectors'][SelectorKey3]>,\n  ReturnState4 extends ReturnType<\n    StoreLike<State4, S4, AS4>['_fullSelectors'][SelectorKey4]\n  > = ReturnType<StoreLike<State4, S4, AS4>['_fullSelectors'][SelectorKey4]>,\n  NewS extends AnySelectors = AnySelectors,\n  NewState = any\n>(\n  selectorInput1: StoreSelectorInput<State1, S1, AS1, SelectorKey1>,\n  selectorInput2: StoreSelectorInput<State2, S2, AS2, SelectorKey2>,\n  selectorInput3: StoreSelectorInput<State3, S3, AS3, SelectorKey3>,\n  selectorInput4: StoreSelectorInput<State4, S4, AS4, SelectorKey4>,\n  newSelector: (\n    s1: ReturnState1,\n    s2: ReturnState2,\n    s3: ReturnState3,\n    s4: ReturnState4,\n  ) => NewState,\n): JoinedMiniStore<any, JoinedSelectors<NewS, NewState>>;\n\nexport function joinSelectors<\n  State1,\n  State2,\n  State3,\n  State4,\n  State5,\n  S1 extends Selectors<State1>,\n  S2 extends Selectors<State2>,\n  S3 extends Selectors<State3>,\n  S4 extends Selectors<State4>,\n  S5 extends Selectors<State5>,\n  AS1 extends AnySelectors,\n  AS2 extends AnySelectors,\n  AS3 extends AnySelectors,\n  AS4 extends AnySelectors,\n  AS5 extends AnySelectors,\n  SelectorKey1 extends SelectorKey<State1, S1, AS1> = 'state',\n  SelectorKey2 extends SelectorKey<State2, S2, AS2> = 'state',\n  SelectorKey3 extends SelectorKey<State3, S3, AS3> = 'state',\n  SelectorKey4 extends SelectorKey<State4, S4, AS4> = 'state',\n  SelectorKey5 extends SelectorKey<State5, S5, AS5> = 'state',\n  ReturnState1 extends ReturnType<\n    StoreLike<State1, S1, AS1>['_fullSelectors'][SelectorKey1]\n  > = ReturnType<StoreLike<State1, S1, AS1>['_fullSelectors'][SelectorKey1]>,\n  ReturnState2 extends ReturnType<\n    StoreLike<State2, S2, AS2>['_fullSelectors'][SelectorKey2]\n  > = ReturnType<StoreLike<State2, S2, AS2>['_fullSelectors'][SelectorKey2]>,\n  ReturnState3 extends ReturnType<\n    StoreLike<State3, S3, AS3>['_fullSelectors'][SelectorKey3]\n  > = ReturnType<StoreLike<State3, S3, AS3>['_fullSelectors'][SelectorKey3]>,\n  ReturnState4 extends ReturnType<\n    StoreLike<State4, S4, AS4>['_fullSelectors'][SelectorKey4]\n  > = ReturnType<StoreLike<State4, S4, AS4>['_fullSelectors'][SelectorKey4]>,\n  ReturnState5 extends ReturnType<\n    StoreLike<State5, S5, AS5>['_fullSelectors'][SelectorKey5]\n  > = ReturnType<StoreLike<State5, S5, AS5>['_fullSelectors'][SelectorKey5]>,\n  NewS extends AnySelectors = AnySelectors,\n  NewState = any\n>(\n  selectorInput1: StoreSelectorInput<State1, S1, AS1, SelectorKey1>,\n  selectorInput2: StoreSelectorInput<State2, S2, AS2, SelectorKey2>,\n  selectorInput3: StoreSelectorInput<State3, S3, AS3, SelectorKey3>,\n  selectorInput4: StoreSelectorInput<State4, S4, AS4, SelectorKey4>,\n  selectorInput5: StoreSelectorInput<State5, S5, AS5, SelectorKey5>,\n  newSelector: (\n    s1: ReturnState1,\n    s2: ReturnState2,\n    s3: ReturnState3,\n    s4: ReturnState4,\n    s5: ReturnState5,\n  ) => NewState,\n): JoinedMiniStore<any, JoinedSelectors<NewS, NewState>>;\n\nexport function joinSelectors(...inputs: any[]): MiniStore<any, { state: any }> {\n  const defaultSelector = 'state';\n  const inputSelectors = inputs\n    .slice(0, -1)\n    .map(input => (Array.isArray(input) ? input : [input, defaultSelector]));\n  const select = inputSelectors[0][0]._select;\n  const newSelector = inputs[inputs.length - 1];\n\n  const state: ({ adapt }: { adapt: any }) => any = (createSelector as any)(\n    [\n      ...inputSelectors.map(\n        ([miniStore, selectorName]) => miniStore._fullSelectors[selectorName],\n      ),\n    ],\n    newSelector,\n  );\n\n  const fullSelectors: { state: any } = { state };\n\n  const requireAllSources$ = merge(\n    ...inputSelectors.map(([miniStore]) => miniStore._requireSources$),\n  );\n\n  const selections: { state$: any } = {\n    state$: using(\n      () => requireAllSources$.subscribe(),\n      () => select(fullSelectors.state),\n    ),\n  };\n\n  return {\n    ...selections,\n    _fullSelectors: fullSelectors,\n    _requireSources$: requireAllSources$,\n    _select: select,\n  };\n}\n","import { Subject } from 'rxjs';\nimport { Action } from './action.interface';\n\ntype SubjectWithoutNext = new <K>() => {\n  [P in Exclude<keyof Subject<K>, 'next'>]: Subject<K>[P];\n};\n\nconst SubjectWithoutNext: SubjectWithoutNext = Subject;\n\nexport class Source<T> extends SubjectWithoutNext<Action<T>> {\n  type: string;\n\n  constructor(type: string) {\n    super();\n    this.type = type;\n  }\n  next(payload: T): void {\n    Subject.prototype.next.call(this, { type: this.type, payload });\n  }\n}\n","export function stateSanitizer<T extends { adapt: any }>(state: T): T {\n  return { ...state, ...state.adapt, adapt: undefined };\n}\n","import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport function toSource<T, K extends string>(type: K) {\n  return (source$: Observable<T>) =>\n    source$.pipe(map(payload => ({ type, payload })));\n}\n","import { AdapterDocs } from '@state-adapt/adapter-docs';\nimport demoAdapterCode from '!!raw-loader!./basic.adapter';\nimport createDemoAdapterCode from '!!raw-loader!./../../../../../libs/core/src/lib/create-basic-adapter.function';\nimport { basicAdapter } from './basic.adapter';\n\nexport const createBasicAdapterDocs: AdapterDocs = {\n  name: 'createBasicAdapter',\n  description: 'Adapter for basic operations: set, update and reset',\n  sourceCode: (createDemoAdapterCode as unknown) as string,\n  parameters: [],\n  demoAdapter: {\n    value: basicAdapter,\n    stateChanges: {\n      set: {\n        demoPayload: '{ \"prop1\": \"New state set\", \"prop2\": \"New State set\" }',\n        documentation: 'Sets state to value passed in payload.',\n      },\n      update: {\n        demoPayload: '{ \"prop2\": \"Updated state\" }',\n        documentation: 'Spreads payload object onto existing state.',\n      },\n      reset: {\n        demoPayload: 'null',\n        documentation: 'Resets state to initial state.',\n      },\n    },\n    selectors: {},\n    initialState: {\n      prop1: 'Initial state for basic adapter demo',\n      prop2: 'Initial state for basic adapter demo',\n    },\n    sourceCode: demoAdapterCode,\n  },\n};\n","export default \"# StateAdapt Conceptual Overview\\n\\nStateAdapt has 3 main concepts: Sources, adapters and stores.\\n\\n## [Sources](/concepts/sources)\\n\\n[Sources](/concepts/sources) are where asynchronous data enters applications. Examples are\\n\\n- User input\\n- Data arriving from a server\\n- A timer completing\\n\\n## [Adapters](/concepts/adapters)\\n\\n[Adapters](/concepts/adapters) are objects containing 2 kinds of reusable state management patterns:\\n\\n- State changes (pure functions that implement ways state can change)\\n- Selectors (pure functions that calculate derived state or just return a specific piece of state)\\n\\n## [Stores](/concepts/stores)\\n\\n[Stores](/concepts/stores) do 3 things:\\n\\n- Define initial state and an adapter to manage it\\n- Connect sources to adapter state changes\\n- Use the adapter's selectors to create observables of the selectors' results. These observables chain off the sources so subscriptions are propagated\\n\";","import { PatchState, CommonAction, isPatchState } from './adapt.actions';\n\nexport function actionSanitizer(action: CommonAction | PatchState) {\n  return isPatchState(action)\n    ? {\n        ...action,\n        action: undefined,\n        actionType: undefined,\n        source: undefined,\n        payload: action.source.payload,\n        type: action.source.type,\n      }\n    : action;\n}\n","import { Component, ChangeDetectionStrategy, NgZone } from '@angular/core';\n\nenum SourceType {\n  WEBSOCKET = 'websocket',\n  HTTP = 'http',\n  CLOCK = 'clock',\n  HTML = 'html',\n}\n\ninterface Source {\n  type: SourceType;\n  active: boolean;\n  x: number;\n  y: number;\n  translate: string;\n  path: string;\n}\n\nenum SinkType {\n  STORAGE = 'storage',\n  HTTP = 'http',\n  HTML = 'html',\n}\ninterface Sink {\n  type: SinkType;\n  active: boolean;\n  x: number;\n  y: number;\n  translate: string;\n  path: string;\n}\n\ninterface Circuit {\n  i: number;\n  sources: Source[];\n  sinks: Sink[];\n}\n\nconst getNumberBetween = (a: number, b: number) =>\n  a + Math.floor((b - a + 1) * Math.random());\n\nconst getNumbersBetween = (\n  a: number,\n  b: number,\n  n: number,\n  ar: number[] = [],\n  newN?: number,\n): number[] => {\n  if (!n) return ar;\n  const nextNewN = getNumberBetween(a, b);\n  const newNAlreadyChosen = newN != null && ar.indexOf(newN) !== -1;\n  const newNValid = newN != null && !isNaN(newN) && !newNAlreadyChosen;\n  return newN != null && newNValid\n    ? getNumbersBetween(a, b, n - 1, [...ar, newN], nextNewN)\n    : getNumbersBetween(a, b, n, ar, nextNewN);\n};\n\nconst getRandomEl = <T>(ar: T[]) => {\n  const i = getNumberBetween(0, ar.length - 1);\n  return { i, el: ar[i] };\n};\n// const getRandomEls = <T>(ar: T[], a = 1, b?: number) => {\n//   b = b ?? ar.length;\n//   const n = Math.ceil((b - a) * Math.random());\n//   const ns = getNumbersBetween(0, ar.length - 1, n);\n//   return [ar, ns];\n// };\n\n// const updateAr = <T>(ar: T[], newEl: T, i: number) => [\n//   ...ar.slice(0, i),\n//   newEl,\n//   ...ar.slice(i + 1),\n// ];\n\nconst waitRandom = (min: number, n: number, fn: () => void) => {\n  fn();\n  setTimeout(() => waitRandom(min, n, fn), Math.max(min, n * Math.random()));\n};\n\nconst mapIndex = (i: number, l1: number, l2: number) =>\n  Math.floor((i * l2) / l1);\n\nconst getTerminals = (gridWidth: number, n: number) =>\n  getNumbersBetween(0, 2 * gridWidth - 1, n)\n    .sort((a, b) => {\n      const isABelow = a / gridWidth >= 1;\n      const isBBelow = b / gridWidth >= 1;\n      const switchFactor = isABelow && isBBelow ? -1 : 1;\n      return (a - b) * switchFactor;\n    })\n    .filter(position => position % gridWidth) // Filter out first position\n    .map((position, i) => {\n      const gridHeight = gridWidth * 2;\n      const cornerPosition = position % gridWidth;\n      const isBelow = position / gridWidth >= 1;\n      const order = isBelow\n        ? (position - 1.5 * gridWidth) * -1 + 1.5 * gridWidth // Shift to center at 0, reflect, shift back\n        : position;\n\n      const height = Math.max(\n        0,\n        getNumberBetween(0, gridWidth - cornerPosition - 1),\n      );\n      const midY = (gridHeight / 2) * 60;\n      const y = midY - (isBelow ? -(height + 0.5) : height + 0.5) * 60; // -0.5 to get to center. height of 4 => y of 30 (half down)\n      const x = (gridWidth - (cornerPosition + height + 0.5)) * 60; // 45 degree, +0.5 to get to center\n\n      // Connections to adapter:\n      const gap = 60 / n;\n      const topConnectionY = midY - 30 + gap / 2;\n      const connectionY = topConnectionY + i * gap;\n      const cornerX = 30 + height * 60;\n      const cornerY = connectionY - y;\n      return { order, x, y, cornerX, cornerY };\n    });\n\nconst getSources = (n: number, gridWidth: number): Source[] =>\n  getTerminals(gridWidth, n).map(({ order, x, y, cornerX, cornerY }) => ({\n    type: Object.values(SourceType)[\n      mapIndex(order, gridWidth * 2, Object.values(SourceType).length)\n    ],\n    active: false,\n    x,\n    y,\n    translate: `translate(${x}, ${y})`,\n    path: `M 30 0 L ${cornerX} ${cornerY} H ${gridWidth * 60 - x}`,\n  }));\n\nconst getSinks = (n: number, gridWidth: number): Sink[] =>\n  getTerminals(gridWidth, n).map(({ order, x, y, cornerX, cornerY }) => {\n    const reflectedX = (gridWidth * 2 + 2) * 60 - x;\n    return {\n      type: Object.values(SinkType)[\n        mapIndex(order, gridWidth * 2, Object.values(SinkType).length)\n      ],\n      active: false,\n      x,\n      y,\n      translate: `translate(${reflectedX}, ${y})`,\n      path: `M -30 0 L ${-cornerX} ${cornerY} H ${-(gridWidth * 60 - x)}`,\n    };\n  });\n\n@Component({\n  selector: 'state-adapt-circuits',\n  templateUrl: './circuits.component.html',\n  styleUrls: ['./circuits.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CircuitsComponent {\n  circuits: Circuit[] = new Array(15).fill(0).map((z, i) => ({\n    i,\n    sources: getSources(4, 6),\n    sinks: getSinks(4, 6),\n  }));\n\n  constructor(private zone: NgZone) {\n    this.zone.runOutsideAngular(() => this.makeCircuitsFire());\n  }\n\n  private makeCircuitsFire() {\n    const startSink = 500;\n    const endSource = 2000;\n    const endSink = startSink + endSource;\n    waitRandom(500, 3000, () => {\n      const sourceGroups = Array.from(document.querySelectorAll('.source'));\n      if (!sourceGroups.length) return;\n      const sourceGroup = getRandomEl(sourceGroups).el;\n      const sourceParent = sourceGroup.parentNode as SVGAElement;\n      const pulse = sourceGroup.querySelector(\n        '.connector-pulse path',\n      ) as SVGAElement;\n      pulse.className.baseVal += ' active';\n      const sinkGroups = Array.from(\n        sourceParent.querySelectorAll('.sink'),\n      ).map(child =>\n        child.querySelector('.connector-pulse path'),\n      ) as SVGAElement[];\n\n      setTimeout(\n        () =>\n          sinkGroups.forEach(\n            child =>\n              (child.className.baseVal +=\n                Math.random() < 0.75 ? ' active' : ''),\n          ),\n        startSink,\n      );\n      setTimeout(\n        () =>\n          (pulse.className.baseVal = pulse.className.baseVal.replace(\n            /(\\s*)active/,\n            '',\n          )),\n        endSource,\n      );\n      setTimeout(\n        () =>\n          sinkGroups.forEach(\n            child =>\n              (child.className.baseVal = child.className.baseVal.replace(\n                /(\\s*)active/,\n                '',\n              )),\n          ),\n        endSink,\n      );\n    });\n  }\n}\n","<svg class=\"circuit\" *ngFor=\"let circuit of circuits\" viewBox=\"-3 -3 843 723\">\n  <g\n    class=\"source\"\n    *ngFor=\"let terminal of circuit.sources\"\n    [attr.transform]=\"terminal.translate\"\n  >\n    <!-- xlink:href puts the center of the child svg at parent.y/2... idk why... -->\n    <!-- Also seems to put the center of the child at the transformed parent.x 0 position -->\n    <use\n      *ngIf=\"terminal.type === 'clock'\"\n      xlink:href=\"#clock\"\n      width=\"60\"\n      [attr.x]=\"-30\"\n      [attr.y]=\"-360\"\n    />\n    <use\n      *ngIf=\"terminal.type === 'http'\"\n      xlink:href=\"#http\"\n      width=\"60\"\n      [attr.x]=\"-30\"\n      [attr.y]=\"-360\"\n    />\n    <use\n      *ngIf=\"terminal.type === 'websocket'\"\n      xlink:href=\"#websocket\"\n      width=\"60\"\n      [attr.x]=\"-30\"\n      [attr.y]=\"-375\"\n    />\n    <use\n      *ngIf=\"terminal.type === 'html'\"\n      xlink:href=\"#html\"\n      width=\"60\"\n      [attr.x]=\"-30\"\n      [attr.y]=\"-360\"\n    />\n    <g class=\"connector\">\n      <path [attr.d]=\"terminal.path\" />\n    </g>\n    <g class=\"connector-pulse\">\n      <path [attr.d]=\"terminal.path\" />\n    </g>\n  </g>\n  <use\n    xlink:href=\"#adapter\"\n    class=\"adapter\"\n    width=\"120\"\n    transform=\"translate(360, 0), rotate(30, 60, 360)\"\n  ></use>\n  <g\n    class=\"sink\"\n    *ngFor=\"let terminal of circuit.sinks\"\n    [attr.transform]=\"terminal.translate\"\n  >\n    <use\n      *ngIf=\"terminal.type === 'http'\"\n      xlink:href=\"#http\"\n      width=\"60\"\n      [attr.x]=\"-30\"\n      [attr.y]=\"-360\"\n    />\n    <use\n      *ngIf=\"terminal.type === 'html'\"\n      xlink:href=\"#html\"\n      width=\"60\"\n      [attr.x]=\"-30\"\n      [attr.y]=\"-360\"\n    />\n    <use\n      *ngIf=\"terminal.type === 'storage'\"\n      xlink:href=\"#storage\"\n      width=\"60\"\n      [attr.x]=\"-30\"\n      [attr.y]=\"-360\"\n    />\n    <g class=\"connector\">\n      <path [attr.d]=\"terminal.path\" />\n    </g>\n    <g class=\"connector-pulse\">\n      <path [attr.d]=\"terminal.path\" />\n    </g>\n  </g>\n</svg>\n\n<div style=\"display: none\">\n  <svg id=\"adapter\" class=\"adapter\" viewBox=\"-63 -63 126 126\">\n    <path d=\"M-30 -52 l-30 52 l30 52 h60 l30 -52 l-30 -52 h-60\" />\n  </svg>\n  <svg id=\"clock\" class=\"clock\" viewBox=\"-33 -33 66 66\">\n    <circle class=\"clock-circle\" r=\"30\" cx=\"0\" cy=\"0\" />\n    <path class=\"hand\" d=\"M0 .5 v-23\" />\n    <path class=\"hand\" d=\"M-.4 -.4 l12 12\" />\n  </svg>\n  <svg id=\"http\" class=\"http\" viewBox=\"0 0 99.79 59.1\">\n    <path\n      d=\"M70.67,12.9h4.72l1,2.93c5-4.2,10.43-5.74,16.19-2.4s7.51,9.21,7.14,15.45a30,30,0,0,1-2.57,11c-3.69,7.61-11.34,8.79-21.2,3.57V58.86l-5.3.24ZM94,29.46c.06-7.57-2.63-12-7.66-12.66-5.84-.74-9.57,2.84-10.35,10-1,9.1,1.94,14.68,8,15.18C90.14,42.44,93.94,37.73,94,29.46Z\"\n    />\n    <path\n      d=\"M0,0H4.87V15c4-1.17,7.43-2.82,11-3.08,6.19-.46,10.13,2.64,10.55,8.76.57,8.23.14,16.53.14,25H21c0-6.89,0-13.66,0-20.44,0-4.1-.53-7.8-5.68-8.36-4.89-.54-8.91,2.17-9.59,7.24-.64,4.75-.48,9.61-.62,14.42-.06,2.28,0,4.57,0,7.1H0Z\"\n    />\n    <path\n      d=\"M36.1,17.48,32,16.55V13l3.88-1.06.49-8.62h5.31l.41,8.66,4.72.89.17,3.9-5.08.46V40.36l5,1.83v3.87c-2,0-4.08.53-5.71-.14s-4-2.37-4.3-4c-.78-3.85-.65-7.89-.74-11.86C36,26,36.1,21.85,36.1,17.48Z\"\n    />\n    <path\n      d=\"M60.13,12l4.68.82.28,3.62-5,.9v23.1l4.78,1.78v3.24c-7.63,2-10.62-.09-10.78-7.54-.14-6.63,0-13.27,0-20.2L50,16.36V13.13l4-1.34c.13-2.74.24-5.36.38-8.43l5.32-.45C59.8,6.07,60,9,60.13,12Z\"\n    />\n  </svg>\n  <svg\n    id=\"websocket\"\n    class=\"websocket\"\n    viewBox=\"0 0 256 193\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M192.44 144.645h31.78V68.339l-35.805-35.804-22.472 22.472 26.497 26.497v63.14zm31.864 15.931H113.452L86.954 134.08l11.237-11.236 21.885 21.885h45.028l-44.357-44.441 11.32-11.32 44.357 44.358V88.296l-21.801-21.801 11.152-11.153L110.685 0H0l31.696 31.696v.084H97.436l23.227 23.227-33.96 33.96L63.476 65.74V47.712h-31.78v31.193l55.007 55.007L64.314 156.3l35.805 35.805H256l-31.696-31.529z\"\n    />\n  </svg>\n  <svg\n    id=\"html\"\n    class=\"html\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 220.8 138.84\"\n  >\n    <path\n      d=\"M145.38,10.14a68.44,68.44,0,0,1-1.95,6.71q-23.1,57.57-46.34,115.09c-2.48,6.12-8.38,8.33-14.39,6-5.65-2.23-8.36-7.64-6-13.79,6.16-16.31,12.61-32.52,19.08-48.71,9-22.51,18.16-45,27.21-67.47,1.93-4.8,5.44-7.73,10.48-7.93A10.93,10.93,0,0,1,144,6.33,34.22,34.22,0,0,1,145.38,10.14Z\"\n    />\n    <path\n      d=\"M26.47,72.76l36,34a11.51,11.51,0,0,1,3.8,10.78c-1.26,8.06-11.32,12.53-17.17,6.89C33.27,109.22,17.85,93.56,2.51,77.85c-3.6-3.69-3.25-9.28.55-13.12Q25.71,41.84,48.72,19.31c4.06-4,10.27-3.56,14.38.3s4.9,10.55,1,14.82C57,42.14,49.6,49.6,42.26,57.09,37.61,61.85,32.82,66.47,26.47,72.76Z\"\n    />\n    <path\n      d=\"M194.82,71.37c-11.27-10.65-21.33-20.1-31.31-29.62a93.84,93.84,0,0,1-6.79-7.31,10.17,10.17,0,0,1,.54-14.37c4-4.11,10.82-4.89,14.84-.93Q195.4,42,218.28,65.41a9,9,0,0,1-.21,12.68q-22.95,23.28-46.32,46.14c-4,3.89-10.42,3.15-14.39-.87-4.18-4.23-4.61-10.54-.54-14.83q12.7-13.41,25.81-26.42C186,78.72,189.83,75.73,194.82,71.37Z\"\n    />\n  </svg>\n  <svg\n    id=\"storage\"\n    class=\"storage\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 512 512\"\n  >\n    <path\n      d=\"M283,512H229a53.3,53.3,0,0,0-5.86-.83c-37.51-1.37-74.7-5.38-111.42-13.23-27.57-5.9-54.61-13.49-79.47-27.23C18.06,462.86,5.43,453.32,0,437V75C4.25,61.76,13.73,53,25,45.67a57.49,57.49,0,0,1,9.49-5.5c16.33-6.53,32.43-13.9,49.23-19C121.61,9.78,160.75,4.82,200.17,2c9.94-.7,19.89-1.35,29.83-2h53c2.3.29,4.59.76,6.89.84,37.34,1.4,74.36,5.45,110.91,13.29,26.74,5.73,53,13.14,77.23,26.2,14.85,8,28.27,17.61,34,34.67V437c-3,5.29-5,11.59-9.18,15.64a131,131,0,0,1-23.59,18.15c-16.82,10-35.41,16-54.23,21.15-37.88,10.33-76.57,15.61-115.69,18.15C300.54,510.66,291.77,511.36,283,512ZM32.17,432c2.83,2.21,5.77,5.37,9.38,7.19,10.53,5.29,21,10.91,32.07,14.87,44.77,16,91.45,22.16,138.62,24.8,53.38,3,106.59,1.06,159.4-7.89,28.94-4.91,57.39-11.7,84.29-23.84,8.82-4,17.39-8.4,23.93-15.59V343.27c-8.27,3.64-16.15,7.55-24.33,10.63-51.89,19.5-106.13,26.17-161,29.06a761.31,761.31,0,0,1-126.75-4c-33.64-3.84-66.9-9.69-99-20.69-12.36-4.23-24.33-9.6-36.58-14.5ZM479.9,231.69c-12.13,4.89-23.63,10.18-35.56,14.22C397.43,261.8,348.76,268,299.59,270.74c-57.92,3.17-115.58.59-172.74-9.82-32.19-5.86-63.73-13.92-93-29.22a7,7,0,0,0-1.85-.33v72.07C41.1,313,53,318.27,65.09,323c43,16.7,87.94,24.14,133.61,26.76,31.89,1.83,63.94,1.81,95.89,1.14A510.56,510.56,0,0,0,401.39,337c21.58-5.09,42.85-11.23,62.47-21.87,5.88-3.19,11.2-7.43,16-10.69ZM480,119.93c-14,5.42-27.57,11.44-41.59,15.92-42.44,13.58-86.27,19.47-130.59,22.32-62.44,4-124.53,1.4-186.1-10.23-28-5.29-55.48-12.6-81.35-25-2.64-1.26-5.26-2.57-8.23-4v73.55c5,3.36,10.22,7.64,16.09,10.56A229.93,229.93,0,0,0,76.13,215c51.94,17.66,105.83,23.3,160.26,24.82,45.22,1.26,90.26-1.16,134.93-8.78,29.1-5,57.71-11.74,84.77-24,8.8-4,17.37-8.38,23.86-15.64Zm.59-39.52c-4.34-3.35-7-6-10.11-7.69-7.75-4.17-15.5-8.51-23.67-11.71C404,44.28,359.13,37.59,313.69,34A755.35,755.35,0,0,0,216.3,32.9c-39.84,2-79.26,6.88-117.88,17.15-17.56,4.67-34.82,10.26-50.81,19-5.26,2.89-10,6.67-15.51,10.38a57.1,57.1,0,0,0,5,4.58,108.88,108.88,0,0,0,10.9,7c25.79,13.5,53.68,20.51,82,26,31.62,6.13,63.58,9.17,95.75,10.35,59,2.16,117.53-1.12,175.24-14.36,21.12-4.85,41.86-11,61.19-21C468.17,88.91,473.63,84.83,480.54,80.41Z\"\n    />\n  </svg>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AdaptCommon, Source, toSource } from '@state-adapt/core';\nimport { TileSelection } from 'carbon-components-angular';\nimport { combineLatest, Subject } from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  first,\n  map,\n  mapTo,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { initialState } from './adapter-docs-state.interface';\nimport { AdapterDocs, defaultAdapterDocs } from './adapter-docs.interface';\nimport { docsAdapter, docsUiAdapter } from './docs.adapter';\nimport { DropdownSelectedEvent } from './dropdown-selection-event.interface';\nimport { getDiffHtml, toJson } from './get-diff-html.function';\n\n@Component({\n  selector: 'state-adapt-adapter-docs',\n  template: `\n    <ng-container *ngIf=\"docs$ | async; let docs\">\n      <h1 class=\"adapter-creator-name\">\n        <code>{{ docs.name }}</code>\n      </h1>\n\n      <markdown [data]=\"docs.description\"></markdown>\n\n      <ibm-structured-list [condensed]=\"true\" *ngIf=\"docs.parameters.length\">\n        <ibm-list-header>\n          <ibm-list-column>Parameter</ibm-list-column>\n          <ibm-list-column>Description</ibm-list-column>\n        </ibm-list-header>\n        <ibm-list-row *ngFor=\"let param of docs.parameters\">\n          <ibm-list-column>\n            <code>{{ param.text }}</code>\n          </ibm-list-column>\n          <ibm-list-column>\n            <!-- {{ param.description }} -->\n            <markdown [data]=\"param.description\"></markdown>\n          </ibm-list-column>\n        </ibm-list-row>\n      </ibm-structured-list>\n\n      <h2>Source Code</h2>\n      <markdown [data]=\"creatorSourceCodeMd$ | async\"></markdown>\n\n      <h2>Demo</h2>\n      <markdown [data]=\"demoSourceCodeMd$ | async\"></markdown>\n      <ng-template #codeTemplate let-item=\"item\">\n        <code style=\"color: #f4f4f4\">{{ item?.content }}</code>\n      </ng-template>\n\n      <div class=\"history\">\n        <ibm-tile-group (selected)=\"historyItemSelected$.next($event)\">\n          <ibm-selection-tile\n            *ngFor=\"let item of demoHistory$ | async; let i = index\"\n            [value]=\"i.toString()\"\n            [selected]=\"item.selected\"\n          >\n            <code>{{ item.inputs.stateChangeName }}</code>\n          </ibm-selection-tile>\n        </ibm-tile-group>\n      </div>\n\n      <ibm-tile class=\"state-change-panel\">\n        <div class=\"dropdown-header\">\n          <ibm-dropdown\n            [dropUp]=\"false\"\n            placeholder=\"State Change\"\n            [displayValue]=\"codeTemplate\"\n            (selected)=\"stateChangeSelection$.next($any($event))\"\n          >\n            <ibm-dropdown-list\n              [items]=\"stateChangeItems$ | async\"\n              [listTpl]=\"codeTemplate\"\n            ></ibm-dropdown-list>\n          </ibm-dropdown>\n        </div>\n        <ibm-tabs>\n          <ibm-tab heading=\"Payload\">\n            <!-- <div\n              class=\"editor-placeholder\"\n              *ngIf=\"payloadEditorRefreshRequired$ | async\"\n            ></div> -->\n            <ngs-code-editor\n              *ngIf=\"(payloadEditorRefreshRequired$ | async) === false\"\n              theme=\"vs-dark\"\n              [codeModel]=\"codeModel$ | async\"\n              [options]=\"codeOptions\"\n              (keypress)=\"editorKeyPressed$.next()\"\n              (valueChanged)=\"payloadChanged$.next($event)\"\n            ></ngs-code-editor>\n          </ibm-tab>\n          <ibm-tab class=\"padded\" heading=\"Documentation\">\n            {{ (selectedStateChange$ | async)?.documentation }}\n          </ibm-tab>\n        </ibm-tabs>\n        <button\n          ibmButton=\"primary\"\n          (click)=\"executeClicked$.next()\"\n          [disabled]=\"selectedHistoryItem$ | async\"\n        >\n          Execute\n        </button>\n      </ibm-tile>\n\n      <ibm-tile class=\"selector-panel\">\n        <div class=\"dropdown-header\">\n          <ibm-dropdown\n            [dropUp]=\"false\"\n            placeholder=\"Selector\"\n            [displayValue]=\"codeTemplate\"\n            (selected)=\"selectorSelection$.next($any($event))\"\n          >\n            <ibm-dropdown-list\n              [items]=\"selectorItems$ | async\"\n              [listTpl]=\"codeTemplate\"\n            ></ibm-dropdown-list>\n          </ibm-dropdown>\n        </div>\n        <ibm-tabs>\n          <ibm-tab heading=\"Result\">\n            <markdown [data]=\"selectorResult$ | async\"></markdown>\n            <!-- <pre class=\"language-json\">{{ selectorResult$ | async }}</pre> -->\n          </ibm-tab>\n          <ibm-tab heading=\"Diff\">\n            <pre class=\"language-json\" [innerHTML]=\"selectorDiff$ | async\"></pre>\n          </ibm-tab>\n          <ibm-tab class=\"padded\" heading=\"Documentation\">\n            {{ (selectedSelector$ | async)?.documentation }}\n          </ibm-tab>\n        </ibm-tabs>\n      </ibm-tile>\n    </ng-container>\n  `,\n  styles: [\n    `\n      .adapter-creator-name code {\n        margin-left: -5px;\n      }\n      ::ng-deep ibm-list-column p {\n        margin: 0;\n        font-size: 1em;\n      }\n      ::ng-deep section.bx--structured-list {\n        margin-bottom: 0;\n        margin-bottom: 1.6rem;\n        margin-top: 0.8rem;\n      }\n\n      ibm-tile {\n        padding: 0;\n      }\n      .history,\n      .state-change-panel {\n        margin-top: 0.5em !important;\n      }\n      .history {\n        width: 100px;\n        float: left !important;\n      }\n      @media screen and (min-width: 1500px) {\n        ::ng-deep .history {\n          margin-left: -200px;\n          width: 200px !important;\n        }\n        ::ng-deep .state-change-panel {\n          margin-left: calc(12px -200px) !important;\n          width: calc(100% + 0px - 12px) !important;\n        }\n        ::ng-deep .selector-panel {\n          width: calc(100% + 0px - 12px) !important;\n        }\n        ::ng-deep .history ibm-selection-tile code {\n          width: calc(200px - 30px) !important;\n        }\n      }\n      ::ng-deep .history ibm-selection-tile label {\n        padding: 1rem !important;\n        min-height: 0 !important;\n        margin-bottom: 4px !important;\n        min-width: 0;\n      }\n      ::ng-deep .history ibm-selection-tile code {\n        width: 70px;\n        overflow: hidden;\n        display: block;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n      }\n      .state-change-panel {\n        margin: 0px 0 20px 12px;\n        width: calc(100% - 100px - 12px);\n        float: right;\n      }\n      .selector-panel {\n        margin: 0 0 2.5rem 0;\n        width: calc(100% - 100px - 12px);\n        float: right;\n      }\n      .dropdown-header {\n        display: flex;\n        align-items: stretch;\n      }\n      .dropdown-header-label {\n        width: 50%;\n        display: flex;\n        align-items: center;\n        margin-top: 0;\n        border-bottom: 1px solid #8d8d8d;\n      }\n      /* .dropdown {\n        width: 66.7%;\n      } */\n      ibm-dropdown {\n        display: block;\n        width: 50%;\n        width: 100%;\n      }\n      ibm-tabs {\n        width: 100%;\n      }\n      ::ng-deep .state-change-panel ibm-tab .bx--tab-content {\n        height: 160px;\n        padding: 0;\n        background-color: #1e1e1e;\n        border-left: 2px solid #00b8a4;\n      }\n      ::ng-deep ibm-tab.padded .bx--tab-content {\n        padding: 1em !important;\n      }\n      ::ng-deep .bx--tabs--scrollable__nav,\n      ::ng-deep .bx--tabs--scrollable__nav-item,\n      ::ng-deep .bx--tabs--scrollable__nav-link {\n        width: 100% !important;\n      }\n      ::ng-deep #editor {\n        min-height: 160px !important;\n      }\n      .editor-placeholder {\n        min-height: 160px;\n        width: 100%;\n        background-color: #1e1e1e;\n      }\n      ::ng-deep .state-change-panel button {\n        width: 33.333%;\n      }\n      ::ng-deep .selector-panel ibm-tab .bx--tab-content {\n        height: 300px;\n        padding: 0;\n        background-color: #1e1e1e;\n        border-left: 2px solid #00b8a4;\n      }\n      ::ng-deep .selector-panel ibm-tab pre {\n        height: 300px;\n        margin: 0;\n        overflow-x: auto;\n        white-space: pre-wrap;\n        font-size: 12px;\n        border-left-width: 0px;\n      }\n    `,\n  ],\n})\nexport class AdapterDocsComponent implements OnInit {\n  @Input() adapterDocs: AdapterDocs = defaultAdapterDocs;\n  path = ('adapterDocs' + Math.random()).replace('.', '');\n\n  detachedDocsStore = this.adapt.spy(this.path, docsAdapter);\n\n  docsInputValue$ = new Subject<AdapterDocs>();\n  docsReceived$ = this.docsInputValue$.pipe(toSource('docsReceived$'));\n  stateChangeSelection$ = new Source<DropdownSelectedEvent>('stateChangeSelection$');\n  stateChangePayloadDelay$ = this.detachedDocsStore.selectedStateChange$.pipe(\n    delay(100),\n    mapTo(undefined),\n    toSource('stateChangePayloadDelay$'),\n  );\n  selectorSelection$ = new Source<DropdownSelectedEvent>('selectorSelection$');\n  payloadChanged$ = new Source<string>('payloadChanged$');\n  // Editor emits when it receives a new value\n  // So only listen to it right after a key press\n  editorKeyPressed$ = new Subject<void>();\n  payloadChangedDebounced$ = this.editorKeyPressed$.pipe(\n    switchMap(() => this.payloadChanged$.pipe(first())),\n    debounceTime(500),\n  );\n  executeClicked$ = new Subject<void>();\n  demoAdapterValue$ = this.docsInputValue$.pipe(map(docs => docs.demoAdapter.value));\n  newStateCalculated$ = this.executeClicked$.pipe(\n    switchMap(() => this.detachedDocsStore.demoStateAndPayload$.pipe(first())),\n    withLatestFrom(this.demoAdapterValue$),\n    map(([{ state, payload, initialState, stateChangeName }, demoAdapter]) =>\n      demoAdapter[stateChangeName](state, JSON.parse(payload), initialState),\n    ),\n    toSource('newStateCalculated$'),\n  );\n  historyItemSelected$ = new Source<TileSelection>('historyItemSelected$');\n\n  docsStore = this.adapt.init([this.path, docsUiAdapter, initialState], {\n    receiveDocs: this.docsReceived$,\n    selectStateChange: this.stateChangeSelection$,\n    selectStateChangeFromHistory: this.historyItemSelected$,\n    resetEditorRefresh: this.stateChangePayloadDelay$,\n    setPayload: this.payloadChangedDebounced$,\n    setDemoState: this.newStateCalculated$,\n    selectHistoryItem: [\n      this.historyItemSelected$,\n      this.payloadChangedDebounced$,\n      this.stateChangeSelection$,\n    ],\n    selectSelector: this.selectorSelection$,\n  });\n\n  docs$ = this.docsStore.docs$;\n  creatorSourceCodeMd$ = this.docsStore.creatorSourceCodeMd$;\n  demoSourceCodeMd$ = this.docsStore.demoSourceCodeMd$;\n  paramters$ = this.docsStore.parameters$;\n  stateChangeItems$ = this.docsStore.adapterStateChangeItems$;\n  selectorItems$ = this.docsStore.adapterSelectorItems$;\n  selectedStateChange$ = this.docsStore.selectedStateChange$;\n  payloadEditorRefreshRequired$ = this.docsStore.payloadEditorRefreshRequired$;\n  codeModel$ = this.docsStore.payloadCodeModel$;\n  codeOptions = {\n    contextMenu: true,\n    scrollBeyondLastLine: false,\n  };\n  demoHistory$ = this.docsStore.demoHistory$;\n  selectedHistoryItem$ = this.docsStore.selectedHistoryItem$;\n  diffStateAndSelectorName$ = this.docsStore.diffStateAndSelectorName$;\n  selectedSelector$ = this.docsStore.selectedSelector$;\n  selectorResult$ = combineLatest([\n    this.demoAdapterValue$,\n    this.diffStateAndSelectorName$,\n  ]).pipe(\n    map(\n      ([adapter, [diff, selectorName]]) =>\n        '```json\\n' +\n        toJson((adapter.selectors || {})[selectorName]?.(diff[1]) || diff[1]) +\n        '\\n```',\n    ),\n  );\n  selectorDiff$ = combineLatest([\n    this.demoAdapterValue$,\n    this.diffStateAndSelectorName$,\n  ]).pipe(\n    map(([adapter, [diff, selectorName]]) => {\n      const selector = (adapter.selectors || {})[selectorName] || this.getState;\n      const selectorDiff = diff.map(selector) as [any, any];\n      return getDiffHtml(...selectorDiff);\n    }),\n  );\n\n  constructor(private adapt: AdaptCommon<any>) {}\n\n  ngOnInit() {\n    setTimeout(() => this.docsInputValue$.next(this.adapterDocs));\n    this.payloadChanged$.subscribe(a => console.log('a', a));\n  }\n\n  getState(state: any) {\n    return state;\n  }\n}\n","export default \"# Stores\\n\\n- [Overview](/concepts/stores#overview)\\n- [`init`](/concepts/stores#init)\\n- [State Paths](/concepts/stores#state-paths)\\n- [`state$`](/concepts/stores#state)\\n- [`initGet`](/concepts/stores#initget)\\n- [Selectors](/concepts/stores#selectors)\\n- [`updater`](/concepts/stores#updater)\\n- [`setter`](/concepts/stores#setter)\\n- [`spy`](/concepts/stores#spy)\\n- [Joining Stores](/concepts/stores#joining-stores)\\n\\n## Overview\\n\\nStores do 3 things:\\n\\n- Define initial state and an adapter to manage it\\n- Connect sources to adapter state changes\\n- Use the adapter's selectors to create observables of the selectors' results. These observables chain off the sources so subscriptions are propagated\\n\\nStores _do not_ subscribe to sources on their own. Nothing will happen until you subscribe to one of the selector observables.\\n\\n## `init`\\n\\n`init` is the method on `AdaptCommon` that creates a store for an adapter. It takes 2 arguments and returns a store object:\\n\\n```typescript\\nimport { AdaptCommon } from '@state-adapt/core';\\n// ...\\nnumberStore = this.adapt.init(\\n  ['number', numberAdapter, 0],\\n  { add: this.numberAdded$ },\\n);\\n\\nconstructor(private adapt: AdaptCommon<any>) {}\\n```\\n\\nThe first argument is an array of 3 elements:\\n\\n- `path`: Object [path](/concepts/stores#state-paths) (`string`) in the global store where this state will live\\n- `adapter`: The adapter that will manage the state in this store\\n- `initialState`: The initial state for this store\\n\\nThe 2nd argument is an object that maps the relationship between state changes and the sources that should trigger them. This object is equivalent to a reducer in _Redux_ or _NgRx_. The property names of the object are the adapter's state change function names. The right-hand side of the object specifies one or more sources that should trigger the state change specified in the property name. To specify multiple sources, pass them in an array, like\\n\\n```typescript\\n{\\n  add: [this.numberAdded$, this.aDifferentNumberAdded$],\\n}\\n```\\n\\n## State Paths\\n\\nThe [path](/concepts/stores#state-paths) string passed into [`init`](/concepts/stores#init) specifies the location in the global store you will find the state for the store being created. StateAdapt splits this string at periods `'.'` and uses the resulting array to define an object path for the state. For example, with an initial state of `0`, the following paths will create the following objects for the global store:\\n\\n```typescript\\n'number' ==> { number: 0 }\\n\\n'featureA.number' ==> { featureA: { number: 0 } }\\n\\n'featureA.featureB.number' ==> { featureA: { featureB: { number: 0 } } }\\n```\\n\\nEach store completely owns its own state. If more than one store tries to use the same path, StateAdapt will throw this error:\\n\\n`Path '${path}' collides with '${existingPath}', which has already been initialized as a state path.`\\n\\nThis applies both to paths that are identical as well as paths that are subtrings of another path. For example, if `'featureA'` is already being used by a state and then another store tried to initialize at `'featureA.number'`, that error would be thrown.\\n\\n## `state$`\\n\\n[`state$`](/concepts/stores#state) is a default property created for each store. It is an observable of the store's state:\\n\\n```typescript\\nnumberStore = this.adapt.init(['number', numberAdapter, 0], {});\\nnumber$ = this.numberStore.state$;\\n```\\n\\n## `initGet`\\n\\n[`initGet`](/concepts/stores#initget) is syntactic sugar for calling [`init`](/concepts/stores#init) and then accessing the [`state$`](/concepts/stores#state) property of the returned store. For example,\\n\\n```typescript\\nnumberStore = this.adapt.init(['number', numberAdapter, 0], {});\\nnumber$ = this.numberStore.state$;\\n```\\n\\nis the same as\\n\\n```typescript\\nnumber$ = this.adapt.initGet(['number', numberAdapter, 0], {});\\n```\\n\\n## Selectors\\n\\nIf selectors are defined in an adapter they get assigned to properties on the store object with an added `'$'` at the end of the property name. They are observables of the selected state:\\n\\n```typescript\\nnumberAdapter = createAdapter<number>()({\\n  selectors: { negative: state => state * -1 },\\n});\\nnumberStore = this.adapt.init(['number', this.numberAdapter, 0], {});\\nnegativeNumber$ = this.numberStore.negative$;\\n```\\n\\nEach selector's observable chains off of all the sources passed into the store. For example, if one of your sources is an observable of an HTTP request, that request will automatically be triggered as soon as you subscribe to any of the selector observables from the store. We recommend keeping your adapters and stores relatively small and focused on one concern so that accessing one part of state does not cause unrelated/unneeded data to be fetched. If necessary, you can also access store selectors that do not chain off of any sources by using the [`spy`](/concepts/stores#spy) method described below.\\n\\n## `updater`\\n\\n[`updater`](/concepts/stores#updater) is a method on `AdaptCommon` that is syntactic sugar for creating a store with an adapter with only the default state reactions and selectors. It expects only one type of source, which can be a single source or an array of sources that trigger the adapter's [`update`](/concepts/adapters#createadapter) method. The [`update`](/concepts/adapters#createadapter) method requires the state to be an object so it can spread it in the updates. This usage of [`updater`](/concepts/stores#updater)\\n\\n```typescript\\nvalueChanges$ = this.form.valueChanges.pipe(toSource('[Form] Value Change'));\\nformValues$ = this.adapt.updater('form', { name: '' }, this.valueChanges$);\\n```\\n\\nis equivalent to\\n\\n```typescript\\nimport { createAdapter } from '@state-adapt/core';\\n// ...\\nvalueChanges$ = this.form.valueChanges.pipe(toSource('[Form] Value Change'));\\nformAdapter = createAdapter<{ name: string }>()({});\\nformValues$ = this.adapt.initGet(['form', this.formAdapter, { name: '' }], {\\n  update: this.valueChanges$,\\n});\\n```\\n\\n[`updater`](/concepts/stores#updater) is like kind of like RxJS's `BehaviorSubject`, except you get to see its state in Redux Devtools. It is best to only use it for extremely trivial state. If you find yourself calculating future states in your source observables and only using [`updater`](/concepts/stores#updater) to store the results, your sources are concerned with too much and you should be using [`init`](/concepts/stores#init) and an adapter containing the state change logic.\\n\\n## `setter`\\n\\n[`setter`](/concepts/stores#setter) is the same as [`updater`](/concepts/stores#updater), except instead of triggering the [`update`](/concepts/adapters#createadapter) state change it triggers the [`set`](/concepts/adapters#createadapter) state change. You can only use it for state that cannot be spread (non-objects), like `number` or `string`.\\n\\n## `spy`\\n\\n[`spy`](/concepts/stores#spy) is a method on `AdaptCommon` that returns a store that does not chain off of sources. It takes 2 arguments: The [path](/concepts/stores#state-paths) of the state you are interested in, and the adapter containing the selectors you want to use:\\n\\n```typescript\\nnegativeNumber$ = this.adapt.spy('number', numberAdapter).negative$;\\n```\\n\\n[`spy`](/concepts/stores#spy) is useful in 2 situations primarily: [Accessing state without subscribing](/concepts/stores#accessing-state-without-subscribing) and [accessing state for a source](/concepts/stores#accessing-state-for-a-source).\\n\\n### 1. Accessing State without Subscribing\\n\\n[`spy`](/concepts/stores#spy) enables accessing state without subscribing to sources. For example, if your adapter manages the `loading` state for an HTTP request and you need to know if the request is loading _before_ the user is interested in the data, [`spy`](/concepts/stores#spy) can give you access to it without triggering the request. This is probably not common, but [`spy`](/concepts/stores#spy) makes it possible.\\n\\n### 2. Accessing State for a Source\\n\\nIt would be impossible for a source itself to access state from the store without [`spy`](/concepts/stores#spy) because it would require using the store before it had been defined. The following example demonstrates this:\\n\\n```typescript\\ndataReceived$ = this.dataStore.dataNeeded$.pipe(\\n  // Error: Property 'dataStore' is used before its initialization.\\n  filter(needed => needed),\\n  switchMap(() => this.dataService.fetchData()),\\n  toSource('dataReceived$'),\\n);\\n\\ndataStore = this.adapt.init(['data', dataAdapter, initialState], {\\n  receive: this.dataReceived$,\\n});\\n```\\n\\nIn this example `dataNeeded$` comes from a selector that returns `true` if data needs to be fetched. This could be useful if the user is given a refresh button which triggers a state change back to the initial state. Since the `dataReceived$` source chains off of `dataNeeded$`, this reset would automatically trigger the request to be made again. Very reactive!\\n\\nHowever, `dataReceived$` needs to reference `this.dataStore.dataNeeded$`, which is impossible because `dataStore` uses `dataReceived$`. It is a circular reference problem.\\n\\n[`spy`](/concepts/stores#spy) solves this:\\n\\n```typescript\\ndataNeeded$ = this.adapt.spy('data', dataAdapter).dataNeeded$;\\n\\ndataReceived$ = this.dataNeeded$.pipe(\\n  filter(needed => needed),\\n  switchMap(() => this.dataService.fetchData()),\\n  toSource('dataReceived$'),\\n);\\n\\ndataStore = this.adapt.init(['data', dataAdapter, initialState], {\\n  receive: this.dataReceived$,\\n});\\n```\\n\\n## Joining Stores\\n\\nStores are treated as independent entities responsible for managing only the state inside of them. But sometimes you need to combine state from multiple stores. Since [`combineLatest` is often inadequate](/concepts/stores#the-problem-with-combinelatest), StateAdapt exports 2 functions to accomplish this: [`joinSelectors`](/concepts/stores#joinselectors) and [`join`](/concepts/stores#join).\\n\\n### The Problem with `combineLatest`\\n\\nWhen multiple stores change state simultaneously, a `combineLatest` that combines state from all of them will fire once for each store instead of once for all of them. This is not performant and requires you to filter out intermediate states where some inputs are fresh but the others are not. Consider this example:\\n\\n```typescript\\nnumberAdded$ = new Source<number>();\\n\\nnumber1$ = this.adapt.initGet(['number1', numberAdapter, 0], {\\n  add: this.numberAdded$,\\n});\\nnumber2$ = this.adapt.initGet(['number2', numberAdapter, 4000], {\\n  add: this.numberAdded$,\\n});\\n\\ntotal$ = combineLatest([this.number1$, this.number2$]).pipe(map((n1, n2) => n1 + n2));\\n```\\n\\nInitially, `total$` will emit `4000`, calculated from the initial inputs of `0` and `4000`. If you then call `numberAdded$.next(10)`, `total$` would first recalculate based on inputs of `10` and `4000`, so it would emit `4010`. After that it would get the update from `number2` and calculate from `10` and `4010` and emit the correct number, `4020`.\\n\\n### `joinSelectors`\\n\\n[`joinSelectors`](/concepts/stores#joinselectors) is the simplest way to use state from multiple stores:\\n\\n```typescript\\nimport { joinSelectors } from '@state-adapt/core';\\n// ...\\ntotal$ = joinSelectors(this.number1Store, this.number2Store, (n1, n2) => n1 + n2);\\n```\\n\\nThe first arguments are stores or store selector arrays (see below), and the last argument is the function that calculates the result. When you pass stores as the first arguments, [`joinSelectors`](/concepts/stores#joinselectors) uses the [`state`](/concepts/stores#state) selector from each store. If you want to use a different selector, you can specify it like this\\n\\n```typescript\\ntotal$ = joinSelectors(\\n  [this.number1Store, 'negative'],\\n  this.number2Store,\\n  (n1, n2) => n1 + n2,\\n);\\n```\\n\\nTypeScript will autocomplete the name of the selector as you type and correctly infer the types in the result function.\\n\\n### `join`\\n\\n[`join`](/concepts/stores#join) is a heavier solution than [`joinSelectors`](/concepts/stores#joinselectors). When you need to join many selectors from the same stores your code will be more DRY if you use [`join`](/concepts/stores#join) instead of [`joinSelectors`](/concepts/stores#joinselectors). [`join`](/concepts/stores#join) gives you access to all of each store's selectors by allowing you to specify a prefix to prepend to all selector names from each individual store. It returns a new store-like object with new selectors you define using `createSelector` from _Reselect_:\\n\\n```typescript\\nimport { createSelector } from 'reselect';\\nimport { join } from '@state-adapt/core';\\n// ...\\nnumbersStore = join(['one', this.number1Store], ['two', this.number2Store], {\\n  totalNegative1: s => s.oneNegative + s.twoState,\\n  totalNegative2: s => s.oneState + s.twoNegative,\\n});\\ntotalNegative1$ = this.numbersStore.totalNegative1$;\\ntotalNegative2$ = this.numbersStore.totalNegative2$;\\n```\\n\";","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'state-adapt-nav-tile',\n  template: `\n    <ng-template #content><ng-content></ng-content></ng-template>\n    <ibm-clickable-tile *ngIf=\"!right\" class=\"left\" [route]=\"[link]\">\n      <h3>\n        Previous: <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </h3>\n    </ibm-clickable-tile>\n    <ibm-clickable-tile *ngIf=\"right\" class=\"right\" [route]=\"[link]\">\n      <h3>Next: <ng-container *ngTemplateOutlet=\"content\"></ng-container></h3>\n    </ibm-clickable-tile>\n  `,\n  styles: [\n    `\n      ibm-clickable-tile {\n        width: calc(50% - 1em);\n        margin-top: 3em;\n      }\n      .left {\n        float: left;\n      }\n      .right {\n        float: right;\n      }\n      h3 {\n        margin-top: 0;\n      }\n    `,\n  ],\n})\nexport class NavTileComponent {\n  @Input() link = '';\n  @Input() right = false;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'state-adapt-content',\n  template: `<div><ng-content></ng-content></div>`,\n  styles: [\n    `\n      div {\n        max-width: 800px;\n        width: 100%;\n        margin: auto;\n        padding: 12px;\n      }\n    `,\n  ],\n})\nexport class ContentComponent {}\n","import { Adapter, createAdapter } from '@state-adapt/core';\n\nexport interface AdapterCreatorParam {\n  text: string;\n  description?: string;\n}\n\nexport interface DemoAdapter {\n  value: Adapter<any, any, any>;\n  stateChanges: {\n    [index: string]: { demoPayload: string; documentation: string };\n  };\n  selectors: { [index: string]: { documentation: string } };\n  sourceCode: string;\n  initialState: any;\n}\n\nexport interface AdapterDocs {\n  name: string;\n  description: string;\n  sourceCode: string;\n  parameters: AdapterCreatorParam[];\n  demoAdapter: DemoAdapter;\n}\n\nexport const defaultAdapterDocs: AdapterDocs = {\n  name: 'Adapter Name',\n  description: 'Adapter Description',\n  sourceCode: `sourceCode`,\n  parameters: [\n    {\n      text: 'text',\n      description: 'description',\n    },\n  ],\n  demoAdapter: {\n    value: createAdapter<any>()({}),\n    stateChanges: {},\n    selectors: {},\n    sourceCode: 'export const demoAdapter = {};',\n    initialState: null,\n  },\n};\n","import { createAdapter } from './create-adapter.function';\n\nexport function createBasicAdapter<T>() {\n  return createAdapter<T>()({});\n}\n","import { MarkedOptions, MarkedRenderer } from 'ngx-markdown';\n\nexport function getMarkedOptions(): MarkedOptions {\n  const renderer = new MarkedRenderer();\n\n  renderer.list = (text: string, ordered: boolean, ...rest) => {\n    const isNested = text.includes('[nested]');\n    const orderedClassName = ordered ? 'ordered' : 'unordered';\n    const className = isNested ? 'nested' : orderedClassName;\n    return `<ul class=\"bx--list--${className}\">${text.replace(\n      '[nested]',\n      '',\n    )}</ul>`;\n  };\n  renderer.listitem = (text: string) =>\n    `<li class=\"bx--list__item\">${text}</li>`;\n  // renderer.heading = (text: string, level: number) => text;\n\n  return { renderer };\n}\n","import { createSelector } from 'reselect';\nimport { merge, using } from 'rxjs';\n// import { AnySelectors } from './any-selectors.interface';\nimport { createSelectors, SelectorReturnTypes } from './create-selectors.function';\nimport { JoinedMiniStore } from './joined-mini-store.interface';\nimport { JoinedSelectors } from './joined-selectors.type';\nimport { MiniStore } from './mini-store.interface';\nimport { Selections } from './selections.type';\n// import { Selectors } from './selectors.interface';\nimport { StoreLike } from './store-like.type';\n\ninterface Selectors<State> {\n  [index: string]: (state: State, props?: any) => any;\n}\n\ninterface AnySelectors {\n  [index: string]: (state: any) => any;\n}\n\ntype Prefixed<Prefix extends string, S> = {\n  [Key in keyof S as `${Prefix}${Capitalize<Key extends string ? Key : never>}`]: S[Key];\n};\n\nexport function join<\n  State1,\n  State2,\n  S1 extends Selectors<State1>,\n  S2 extends Selectors<State2>,\n  AS1 extends AnySelectors,\n  AS2 extends AnySelectors,\n  Prefix1 extends string,\n  Prefix2 extends string,\n  PrefixedSelectors extends Prefixed<Prefix1, S1> & Prefixed<Prefix2, S2>,\n  PrefixedState extends SelectorReturnTypes<\n    Prefixed<Prefix1, State1> & Prefixed<Prefix2, State2>,\n    PrefixedSelectors\n  >,\n  NewS extends Selectors<PrefixedState>,\n  CombinedS extends NewS & PrefixedSelectors\n>(\n  store1: [Prefix1, StoreLike<State1, S1, AS1>],\n  store2: [Prefix2, StoreLike<State2, S2, AS2>],\n  newSelectors: NewS,\n): JoinedMiniStore<any, JoinedSelectors<CombinedS, [State1, State2]>>;\nexport function join<\n  State1,\n  State2,\n  State3,\n  S1 extends Selectors<State1>,\n  S2 extends Selectors<State2>,\n  S3 extends Selectors<State3>,\n  AS1 extends AnySelectors,\n  AS2 extends AnySelectors,\n  AS3 extends AnySelectors,\n  Prefix1 extends string,\n  Prefix2 extends string,\n  Prefix3 extends string,\n  PrefixedSelectors extends Prefixed<Prefix1, S1> &\n    Prefixed<Prefix2, S2> &\n    Prefixed<Prefix3, S3>,\n  PrefixedState extends SelectorReturnTypes<\n    Prefixed<Prefix1, State1> & Prefixed<Prefix2, State2> & Prefixed<Prefix3, State3>,\n    PrefixedSelectors\n  >,\n  NewS extends Selectors<PrefixedState>,\n  CombinedS extends NewS & PrefixedSelectors\n>(\n  store1: [Prefix1, StoreLike<State1, S1, AS1>],\n  store2: [Prefix2, StoreLike<State2, S2, AS2>],\n  store3: [Prefix3, StoreLike<State3, S3, AS3>],\n  newSelectors: NewS,\n): JoinedMiniStore<any, JoinedSelectors<CombinedS, [State1, State2, State3]>>;\nexport function join<\n  State1,\n  State2,\n  State3,\n  State4,\n  S1 extends Selectors<State1>,\n  S2 extends Selectors<State2>,\n  S3 extends Selectors<State3>,\n  S4 extends Selectors<State4>,\n  AS1 extends AnySelectors,\n  AS2 extends AnySelectors,\n  AS3 extends AnySelectors,\n  AS4 extends AnySelectors,\n  Prefix1 extends string,\n  Prefix2 extends string,\n  Prefix3 extends string,\n  Prefix4 extends string,\n  PrefixedSelectors extends Prefixed<Prefix1, S1> &\n    Prefixed<Prefix2, S2> &\n    Prefixed<Prefix3, S3> &\n    Prefixed<Prefix4, S4>,\n  PrefixedState extends SelectorReturnTypes<\n    Prefixed<Prefix1, State1> &\n      Prefixed<Prefix2, State2> &\n      Prefixed<Prefix3, State3> &\n      Prefixed<Prefix4, State4>,\n    PrefixedSelectors\n  >,\n  NewS extends Selectors<PrefixedState>,\n  CombinedS extends NewS & PrefixedSelectors\n>(\n  store1: [Prefix1, StoreLike<State1, S1, AS1>],\n  store2: [Prefix2, StoreLike<State2, S2, AS2>],\n  store3: [Prefix3, StoreLike<State3, S3, AS3>],\n  store4: [Prefix4, StoreLike<State4, S4, AS4>],\n  newSelectors: NewS,\n): JoinedMiniStore<any, JoinedSelectors<CombinedS, [State1, State2, State3, State4]>>;\nexport function join<\n  State1,\n  State2,\n  State3,\n  State4,\n  State5,\n  S1 extends Selectors<State1>,\n  S2 extends Selectors<State2>,\n  S3 extends Selectors<State3>,\n  S4 extends Selectors<State4>,\n  S5 extends Selectors<State5>,\n  AS1 extends AnySelectors,\n  AS2 extends AnySelectors,\n  AS3 extends AnySelectors,\n  AS4 extends AnySelectors,\n  AS5 extends AnySelectors,\n  Prefix1 extends string,\n  Prefix2 extends string,\n  Prefix3 extends string,\n  Prefix4 extends string,\n  Prefix5 extends string,\n  PrefixedSelectors extends Prefixed<Prefix1, S1> &\n    Prefixed<Prefix2, S2> &\n    Prefixed<Prefix3, S3> &\n    Prefixed<Prefix4, S4> &\n    Prefixed<Prefix5, S5>,\n  PrefixedState extends SelectorReturnTypes<\n    Prefixed<Prefix1, State1> &\n      Prefixed<Prefix2, State2> &\n      Prefixed<Prefix3, State3> &\n      Prefixed<Prefix4, State4> &\n      Prefixed<Prefix5, State5>,\n    PrefixedSelectors\n  >,\n  NewS extends Selectors<PrefixedState>,\n  CombinedS extends NewS & PrefixedSelectors\n>(\n  store1: [Prefix1, StoreLike<State1, S1, AS1>],\n  store2: [Prefix2, StoreLike<State2, S2, AS2>],\n  store3: [Prefix3, StoreLike<State3, S3, AS3>],\n  store4: [Prefix4, StoreLike<State4, S4, AS4>],\n  store5: [Prefix5, StoreLike<State5, S5, AS5>],\n  newSelectors: NewS,\n): JoinedMiniStore<\n  any,\n  JoinedSelectors<CombinedS, [State1, State2, State3, State4, State5]>\n>;\n\nexport function join<CombinedS extends Selectors<any>>(\n  ...inputs: any[]\n): MiniStore<any, CombinedS> {\n  const miniStoreInputs = inputs.slice(0, -1);\n  const select = miniStoreInputs[0][1]._select;\n  const newSelectors = inputs[inputs.length - 1];\n\n  const getState: ({ adapt }: { adapt: any }) => any = (createSelector as any)(\n    [...miniStoreInputs.map(([prefix, miniStore]) => miniStore._fullSelectors.state)],\n    (...results: any[]) => results,\n  );\n\n  const combinedStoreSelectors = miniStoreInputs.reduce(\n    (combined, [prefix, miniStore]) => ({\n      ...combined,\n      ...prefixObjectKeys(prefix, miniStore._fullSelectors),\n    }),\n    {} as any,\n  );\n\n  const fullSelectors: any = {\n    ...createSelectors<any>()(combinedStoreSelectors, newSelectors),\n    state: getState,\n  };\n  const requireAllSources$ = merge(\n    ...miniStoreInputs.map(([prefix, miniStore]) => miniStore._requireSources$),\n  );\n\n  const selections = Object.keys(fullSelectors).reduce(\n    (selections, key) => ({\n      ...selections,\n      [key + '$']: using(\n        () => requireAllSources$.subscribe(),\n        () => select(fullSelectors[key]),\n      ),\n    }),\n    {} as Selections<any, CombinedS>,\n  );\n\n  return {\n    ...selections,\n    _fullSelectors: fullSelectors,\n    _requireSources$: requireAllSources$,\n    _select: select,\n  };\n}\n\nfunction prefixObjectKeys<Prefix extends string, T>(\n  prefix: Prefix,\n  obj: T,\n): Prefixed<Prefix, T> {\n  return Object.entries(obj).reduce(\n    (newObj, [key, value]) => ({ ...newObj, [`${prefix}${capitalize(key)}`]: value }),\n    {} as Prefixed<Prefix, T>,\n  );\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n","import { Adapter, ReactionsWithSelectors } from './adapter.type';\nimport { Selectors } from './selectors.interface';\n\nexport interface BasicAdapterMethods<State> {\n  set: (s: State, p: State) => State;\n  update: (s: State, u: Partial<State>) => State;\n  reset: (s: State, p: any, i: State) => State;\n}\n\nexport function createAdapter<State>() {\n  return <S extends Selectors<State>, R extends ReactionsWithSelectors<State, S>>(\n    adapter: Adapter<State, S, R> = {} as Adapter<State, S, R>,\n  ): Adapter<\n    State,\n    S,\n    R & BasicAdapterMethods<State> & ReactionsWithSelectors<State, S>\n  > => ({\n    set: (state, payload) => payload,\n    update: (state, update) => ({ ...state, ...update }),\n    reset: (state, payload, initialState) => initialState,\n    ...adapter,\n    selectors: {\n      ...(adapter.selectors || ({} as S)),\n      state: state => state,\n    },\n  });\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export default \"# Thinking Reactively\\n\\nStateAdapt enables completely reactive state management. Although each team should determine for themselves how much they want to commit to reactive architecture, we believe that functional reactive programming will increasingly become the dominant pattern for most nontrivial apps.\\n\\n## Reactive code is better\\n\\nFunction reactive programming creates apps that are less bug-prone because they respect separation of concerns: Rather than organizing code by the timing of its execution, it organizes code by what feature it changes.\\n\\n## It takes practice\\n\\nReactive programming is not harder, it is just different. Thinking reactively takes practice. Experienced developers will have strong imperative habits, including using callback functions for events and reaching from outside of features to tell them how to change. However, with practice, it will become easier and easier to think reactively.\\n\\n---\\n\\n## Try this process\\n\\nUntil experienced developers have overcome the habits of imperative programming, we recommend the following process, which should reduce the cognitive load of trying to think both reactively and imperatively. After trying it you may find a different process more helpful, and that is fine.\\n\\n### 1. Define sources\\n\\nSources are only concerned with representing an event. This makes them extremely simple to start with.\\n\\nWhat if the event data ends up not being emitted in the exact shape we want it? That is the concern of the consumers, not the source. Sources are at the very top; everything else is downstream.\\n\\n### 2. Choose an adapter\\n\\nHow should state change in response to the sources you just created? Is this state pattern something you have seen before? Try to reuse state adapters where possible, but if you can't, create a new adapter to handle those state changes.\\n\\nState changes are the place you want to handle discrepancies between the structure of data emitted from sources and how you want your state to be shaped. Do not let sources dictate the shape of your state if there is a conflict between what makes sense and what just happens when you dump the source payloads into the state. Your state shape should be clear, minimal and performant for selectors to access.\\n\\n### 3. Create a store\\n\\nDefine the initial state and create a store with the adapter.\\n\\n### 4. Make selectors (if needed)\\n\\nDefine selectors in the adapter to maximize convenience for consumers. Selectors are the perfect place to create the exact data shape the consumers want. For example, if the state needs to end up in a template, consider creating a selector that maps the state into the most convenient structure to be consumed by HTML. Always try to put logic in adapters, because they are collections of pure functions, which are extremely nice to test and reuse. Pulling synchronous code out of RxJS pipes also makes it easier to follow the asynchronous logic.\\n\\nYou can also [combine selectors between stores](/concepts/stores#joining-stores) if needed.\\n\\n### 5. Repeat\\n\\nRepeat the process.\\n\\nSome sources require state from other stores. For example, if you are creating a filtered list, you need the filter state in order to make the request to the server for the filtered items. You will probably want to create a selector in the required filter adapter to get the data in the exact format you want.\\n\\nSome sources need to access state from the same store they will be used in. This creates a circular reference, so the solution is to use [`select`](/concepts/stores#select).\\n\";","import { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { getHttpError } from './get-http-error.function';\n\nexport function getCatchHttpError<Type extends string>(type: Type) {\n  return <T>(obs$: Observable<T>) => obs$.pipe(catchError(getHttpError(type)));\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, SecurityContext } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AdapterDocsModule } from '@state-adapt/adapter-docs';\nimport {\n  actionSanitizer,\n  AdaptCommon,\n  createStore,\n  stateSanitizer,\n} from '@state-adapt/core';\nimport {\n  ButtonModule,\n  CheckboxModule,\n  DatePickerModule,\n  ListModule,\n  PanelModule,\n  TilesModule,\n  UIShellModule,\n} from 'carbon-components-angular';\nimport { MarkdownModule, MarkedOptions } from 'ngx-markdown';\n\nimport { AdaptersCoreComponent } from './adapters/adapters-core.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CircuitsComponent } from './circuits/circuits.component';\nimport { AdaptersComponent } from './concepts/adapters.component';\nimport { NavTileComponent } from './concepts/nav-tile.component';\nimport { ConceptsOverviewComponent } from './concepts/overview.component';\nimport { SourcesComponent } from './concepts/sources.component';\nimport { StoresComponent } from './concepts/stores.component';\nimport { ThinkingReactivelyComponent } from './concepts/thinking-reactively.component';\nimport { ContentComponent } from './content.component';\nimport { DemosComponent } from './demos/demos.component';\nimport { getMarkedOptions } from './get-marked-options.function';\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\nimport { IntroComponent } from './intro/intro.component';\n\nconst enableReduxDevTools = (window as any).__REDUX_DEVTOOLS_EXTENSION__?.({\n  actionSanitizer,\n  stateSanitizer,\n});\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    UIShellModule,\n    ButtonModule,\n    CheckboxModule,\n    DatePickerModule,\n    PanelModule,\n    ListModule,\n    TilesModule,\n    MarkdownModule.forRoot({\n      markedOptions: {\n        provide: MarkedOptions,\n        useFactory: getMarkedOptions,\n      },\n      sanitize: SecurityContext.NONE,\n    }),\n    AdapterDocsModule,\n  ],\n  declarations: [\n    AppComponent,\n    ContentComponent,\n    IntroComponent,\n    CircuitsComponent,\n    DemosComponent,\n    GettingStartedComponent,\n    NavTileComponent,\n    ConceptsOverviewComponent,\n    SourcesComponent,\n    AdaptersComponent,\n    StoresComponent,\n    ThinkingReactivelyComponent,\n    AdaptersCoreComponent,\n  ],\n  providers: [\n    { provide: AdaptCommon, useValue: createStore(enableReduxDevTools) },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { createBasicAdapterDocs } from './create-basic-adapter-docs.const';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'state-adapt-adapters-core',\n  template: `\n    <state-adapt-content>\n      <h1>Core Adapters</h1>\n      <state-adapt-adapter-docs\n        [adapterDocs]=\"adapterDocs\"\n      ></state-adapt-adapter-docs>\n    </state-adapt-content>\n  `,\n})\nexport class AdaptersCoreComponent {\n  adapterDocs = createBasicAdapterDocs;\n}\n","export default \"import { createAdapter } from './create-adapter.function';\\n\\nexport function createBasicAdapter<T>() {\\n  return createAdapter<T>()({});\\n}\\n\";","export default \"# Sources\\n\\n- [Overview](/concepts/sources#overview)\\n- [`toSource`](/concepts/sources#tosource)\\n- [`Source`](/concepts/sources#source)\\n- [`splitSources`](/concepts/sources#splitsources)\\n- [`getAction`](/concepts/sources#getaction)\\n- [`getHttpSources`](/concepts/sources#gethttpsources)\\n- [One Source Per Event](/concepts/sources#one-source-per-event)\\n\\n## Overview\\n\\nSources are where asynchronous data enters applications. Examples are\\n\\n- user input\\n- data arriving from a server\\n- a timer completing\\n\\nThere are 2 types of sources: Sources created from existing observables, and sources created from the [`Source`](/concepts/sources#source) class (similar to RxJS `Subject`).\\n\\nSources should be named after events, not commands. For example, rather than naming a source `changeName$`, consider naming it `nameChange$` or `nameChanged$`. In reactive programming, data flows in one direction, and giving a source the name of a command puts implicit knowledge about what happens _downstream_ from the source into the source itself. It is a subtle but important change of mindset from traditional, imperative programming.\\n\\n## `toSource`\\n\\n[`toSource`](/concepts/sources#tosource) is an observable operator that converts an existing observable into a source. It takes one argument: the action type that will be displayed in Redux Devtools. The only purpose of the action type is to appear in Redux Devtools to help developers understand what is taking place in the application, so you can name it whatever you want.\\n\\nExample:\\n\\n```typescript\\nimport { timer } from 'rxjs';\\nimport { toSource } from '@state-adapt/core';\\n\\nconst timer$ = timer(3000).pipe(toSource('timer$'));\\n```\\n\\n![Action Type in Redux Devtools](../assets/timer$.png)\\n\\n(Note: This will not occur until you use the source in a store and subscribe to its state.)\\n\\nInternally, `toSource` just maps values to action objects that are similar to Redux actions. While you can technically interact with these objects, we discourage doing so, both to encourage reactive patterns and to avoid depending too much on the internal implementation of StateAdapt.\\n\\n## `Source`\\n\\nWhen you don't have an observable already, you can use a [`Source`](/concepts/sources#source) the same way you would use an RxJS `Subject`. The most common use case for this is to represent user input in a component:\\n\\n```html\\n<button (click)=\\\"formSubmission$.next()\\\">Submit</button>\\n```\\n\\n```typescript\\nimport { Source } from '@state-adapt/core';\\n// ...\\nformSubmission$ = new Source<void>('formSubmission$');\\n```\\n\\nThe argument is the action type that will show up in Redux Devtools.\\n\\nSimilar to [`toSource`](/concepts/sources#tosource), [`Source`](/concepts/sources#source) wraps values pushed into it in objects similar to Redux actions.\\n\\n## `splitSources`\\n\\nSome observables are actually several event types merged together. Although it will depend on how you write your state adapters, you will probably want only one event type per source. You could just `filter` for each event type and then use [`toSource`](/concepts/sources#tosource) on each filtered stream, but StateAdapt provides a [`splitSources`](/concepts/sources#splitsources) function that might help. Here is how it can be used:\\n\\n```typescript\\nimport { Observable } from 'rxjs';\\nimport { splitSources } from '@state-adapt/core';\\n\\nenum MessageType {\\n  MESSAGE_1 = 'MESSAGE_1',\\n  MESSAGE_2 = 'MESSAGE_2',\\n}\\n\\ninterface Message1 {\\n  type: MessageType.MESSAGE_1;\\n}\\n\\ninterface Message2 {\\n  type: MessageType.MESSAGE_2;\\n  data: string;\\n}\\n\\ntype WebsocketMessage = Message1 | Message2;\\n\\nconst websocketMessages$: Observable<WebsocketMessage> = of(\\n  Math.random() < 0.5\\n    ? { type: MessageType.MESSAGE_1 }\\n    : { type: MessageType.MESSAGE_2, data: 'asdfasdf' },\\n);\\n\\nconst { message1$, message2$ } = splitSources(websocketMessages$, {\\n  message1$: MessageType.MESSAGE_1, // matches against message.type\\n  message2$: MessageType.MESSAGE_2,\\n});\\n\\n// Correctly infers the type of message1$ as Observable<Message1>\\n// You can now apply toSource to each stream\\n```\\n\\nSince [`splitSources`](/concepts/sources#splitsources) matches against the `type` property of the values emitted from the observable passed into it, you can easily pass in an observable of actual StateAdapt sources and they will come out the other side as sources still. However, when all the messages in the input observable do _not_ fit the StateAdapt/Redux `Action` interface, you will have to use [`toSource`](/concepts/sources#tosource) to convert them, as mentioned in that example.\\n\\n## `getAction`\\n\\nThis is a function that takes in 2 arguments (an `actionType` and an optional `payload`) and creates a StateAdapt `Action`. So, in this example `source1$` and `source2$` are equivalent:\\n\\n```typescript\\nimport { of } from 'rxjs';\\nimport { map } from 'rxjs/operators';\\nimport { toSource, getAction } from '@state-adapt/core';\\n\\nconst obs$ = of(1);\\nconst source1$ = obs$.pipe(toSource('source1$'));\\nconst source2$ = obs$.pipe(map(n => getAction('source$2', n)));\\n```\\n\\nThis can give you a little more flexibility when creating sources.\\n\\n## `getHttpSources`\\n\\nHttp requests are often just used for the single value they emit when they complete. However, if you want to handle the loading state and errors, http requests become a common example of an observable that contains multiple event types in a single observable: `request`, `error` and `success`. getHttpSources uses [`getAction`](/concepts/sources#getaction) and [`splitSources`](/concepts/sources#splitsources) internally to split an http request observable into those 3 common sources. Example usage:\\n\\n```typescript\\nimport { getHttpSources } from '@state-adapt/core';\\n\\nconst fetchData = () =>\\n  timer(2000).pipe(mapTo({ body: 'Some data', status: 200, error: null }));\\n\\nconst { request$, success$, error$ } = getHttpSources('[Some Data]', fetchData(), res => [\\n  res.status === 200,\\n  res.body,\\n  res.error,\\n]);\\n```\\n\\nThere is a lot going on here.\\n\\nThe first argument is the scope. Whatever you pass in here, [`getHttpSources`](/concepts/sources#gethttpsources) will append `' Request'`, `' Success'` or `' Error'` to the actions that it uses [`getAction`](/concepts/sources#getaction) to create. So if you pass in `'[Some Data]'`, the action types of the sources will be `'[Some Data] Request'`, `'[Some Data] Success'` and `'[Some Data] Error'`.\\n\\nThe 2nd argument is an observable (the http request).\\n\\nThe 3rd argument is a function you need to provide that takes in the value emitted by the observable passed in argument 2 and returns an array containing 3 elements:\\n\\n1. A boolean that is true if the request was successful\\n2. The value you want as the payload of the `Success` action\\n3. The error message from the response\\n\\n[`getHttpSources`](/concepts/sources#gethttpsources) also applies a `catchError` RxJS operator and maps it to the `Error` source, so the type emitted by the `Error` source is `string | Err`, where `Err` is whatever you typed it as in your observable.\\n\\n## One Source Per Event\\n\\n### No Multiple Sources\\n\\nIn reactive programming, data flows in one direction, so each source represents a single kind of event. Rather than handling an event in a callback function, you should directly push the event into a single source and handle downstream effects in the affected features themselves.\\n\\nBad example:\\n\\n```html\\n<!-- DO NOT DO THIS -->\\n<button (click)=\\\"onFormSubmit()\\\">Submit</button>\\n```\\n\\n```typescript\\nimport { Source } from '@state-adapt/core';\\n// ... DO NOT DO THIS\\nsubmitForm$ = new Source<FormData>('submitForm$');\\nresetForm$ = new Source<void>('resetForm$');\\n// ... DO NOT DO THIS\\nonFormSubmit() {\\n  this.submitForm$.next(this.form.value);\\n  this.resetForm$.next();\\n}\\n```\\n\\nGood example:\\n\\n```html\\n<!-- DO THIS -->\\n<button (click)=\\\"formSubmission$.next()\\\">Submit</button>\\n```\\n\\n```typescript\\nimport { Source } from '@state-adapt/core';\\n// ... DO THIS\\nformSubmission$ = new Source<void>('formSubmission$'); // or formSubmitted$\\n```\\n\\nThere might be numerous states that are impacted by a single event. You should still only create a single source for this event and handle downstream effects in the affected features themselves.\\n\\nInternally, StateAdapt checks each source you pass into the `init` method to see if you have passed it into the `init` method at any time before. If you have, it doesn't subscribe to the same source again; it just adds its state changes to the list of state changes to apply whenever the first source emits.\\n\\nThe benefit of doing it this way is that you only see one action dispatched in Redux Devtools for each event that occurs in the app, even if dozens of stores are listening to it. They all get piled onto the same action for Redux Devtools.\\n\\nThe drawback is rare, but it does occur: Since we only subscribe to the first observable, cold observables like those created from `of` and `timer` that you would expect to fire for each individual store that uses them will actually only fire for the first store that uses that exact observable reference. The solution? Just create a new reference for each store that uses it. This can be achieved either through a factory function, such as `getTimer = () => timer(5000)`, or by wrapping the reference in a `defer()` when passing it into another store (simply calling `.pipe()` on an observable doesn't seem to create a new reference, so that doesn't work). There might be a more clever workaround, but these work.\\n\\nThis situation is rare and the benefits from having 1 action in Redux Devtools per event is well worth this drawback. But it is good to know about so you can deal with it when you come across it.\\n\\n### No Multiple Events\\n\\nOne of StateAdapt's core aims is to maximize reusability of state management patterns. This is good, but when it comes to sources, it can be easy to go a little too far. State adapters have no opinion on what sources are going to cause their state changes, and this is intentional. The responsibility to define these sources lies with the consumers of these adapters, because there may be multiple stores that need to react to those same sources. If sources were provided with each adapter, developers would be tempted to use them all and just call `.next()` on each of them for single events, which is the problem discussed in [No Multiple Sources](/concepts/sources#no-multiple-sources). In other words, providing sources that can be reused across multiple event types/origins can lead to imperatively updating multiple sources in response to single events.\\n\\nWhen looking at Redux Devtools you want to be able to understand exactly which sources actions are coming from. If you do end up creating utility methods for generating sources (like [`getHttpSources`](/concepts/sources#gethttpsources)) make sure you are able to accept a scope to prepend to each source type. Refer to [`getHttpSources`](/concepts/sources#gethttpsources) as an example.\\n\\n[Mike Ryan's talk on good action hygene](https://www.youtube.com/watch?v=JmnsEvoy-gY) applies to StateAdapt sources.\\n\\nIt is generally safer to define sources as close as possible to where the events themselves are emitted from. For example, if you are creating a source for a button click, you should prefer defining it right in the same component as the button itself, or at least a service that is dedicated to that component.\\n\";","import { CommonModule } from '@angular/common';\nimport { NgModule, SecurityContext } from '@angular/core';\nimport { CodeEditorModule } from '@ngstack/code-editor';\nimport {\n  ButtonModule,\n  DropdownModule,\n  InputModule,\n  StructuredListModule,\n  TabsModule,\n  TilesModule,\n} from 'carbon-components-angular';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { AdapterDocsComponent } from './adapter-docs.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StructuredListModule,\n    TilesModule,\n    ButtonModule,\n    DropdownModule,\n    TabsModule,\n    InputModule,\n    MarkdownModule.forRoot({\n      sanitize: SecurityContext.NONE,\n    }),\n    CodeEditorModule.forRoot(),\n  ],\n  declarations: [AdapterDocsComponent],\n  exports: [AdapterDocsComponent],\n})\nexport class AdapterDocsModule {}\n","interface Selectors<State> {\n  [index: string]: (state: State, props?: any) => any;\n}\n\nexport type SelectorReturnTypes<State, S extends Selectors<State>> = {\n  [Key in keyof S]: ReturnType<S[Key]>;\n};\n\nexport type ReturnTypeSelectors<\n  State,\n  S1States,\n  NewSelectors extends Selectors<S1States>\n> = {\n  [Key in keyof NewSelectors]: (\n    state: State,\n    props?: any,\n  ) => ReturnType<NewSelectors[Key]>;\n};\n\nexport type WithStateSelector<State, S extends Selectors<State>> = S & {\n  state: (state: State) => State;\n};\n\ntype SelectorsCreator<State> = {\n  // ====================================================================================== 1\n  <S extends Selectors<State>, S1 extends WithStateSelector<State, S>>(selectors1: S): S1;\n  // ====================================================================================== 2\n  <\n    S extends Selectors<State>,\n    S1 extends WithStateSelector<State, S>,\n    S1States extends SelectorReturnTypes<State, S1>,\n    S2 extends Selectors<S1States>\n  >(\n    selectors1: S,\n    selectors2: S2,\n  ): S1 & ReturnTypeSelectors<State, S1States, S2>;\n  // ====================================================================================== 3\n  <\n    S extends Selectors<State>,\n    S1 extends WithStateSelector<State, S>,\n    S1States extends SelectorReturnTypes<State, S1>,\n    S2 extends Selectors<S1States>,\n    S2States extends SelectorReturnTypes<State, S1 & S2>,\n    S3 extends Selectors<S1States & S2States>\n  >(\n    selectors1: S,\n    selectors2: S2,\n    selectors3: S3,\n  ): S1 & ReturnTypeSelectors<State, S1States & S2States, S2 & S3>;\n  // ====================================================================================== 4\n  <\n    S extends Selectors<State>,\n    S1 extends WithStateSelector<State, S>,\n    S1States extends SelectorReturnTypes<State, S1>,\n    S2 extends Selectors<S1States>,\n    S2States extends SelectorReturnTypes<State, S1 & S2>,\n    S3 extends Selectors<S1States & S2States>,\n    S3States extends SelectorReturnTypes<State, S1 & S2 & S3>,\n    S4 extends Selectors<S1States & S2States & S3States>\n  >(\n    selectors1: S,\n    selectors2: S2,\n    selectors3: S3,\n    selectors4: S4,\n  ): S1 & ReturnTypeSelectors<State, S1States & S2States & S3States, S2 & S3 & S4>;\n  // ====================================================================================== 5\n  <\n    S extends Selectors<State>,\n    S1 extends WithStateSelector<State, S>,\n    S1States extends SelectorReturnTypes<State, S1>,\n    S2 extends Selectors<S1States>,\n    S2States extends SelectorReturnTypes<State, S1 & S2>,\n    S3 extends Selectors<S1States & S2States>,\n    S3States extends SelectorReturnTypes<State, S1 & S2 & S3>,\n    S4 extends Selectors<S1States & S3States>,\n    S4States extends SelectorReturnTypes<State, S1 & S2 & S3 & S4>,\n    S5 extends Selectors<S1States & S2States & S3States & S4States>\n  >(\n    selectors1: S,\n    selectors2: S2,\n    selectors3: S3,\n    selectors4: S4,\n    selectors5: S5,\n  ): S1 &\n    ReturnTypeSelectors<\n      State,\n      S1States & S2States & S3States & S4States,\n      S2 & S3 & S4 & S5\n    >;\n  // ====================================================================================== 6\n  <\n    S extends Selectors<State>,\n    S1 extends WithStateSelector<State, S>,\n    S1States extends SelectorReturnTypes<State, S1>,\n    S2 extends Selectors<S1States>,\n    S2States extends SelectorReturnTypes<State, S1 & S2>,\n    S3 extends Selectors<S1States & S2States>,\n    S3States extends SelectorReturnTypes<State, S1 & S2 & S3>,\n    S4 extends Selectors<S1States & S3States>,\n    S4States extends SelectorReturnTypes<State, S1 & S2 & S3 & S4>,\n    S5 extends Selectors<S1States & S2States & S3States & S4States>,\n    S5States extends SelectorReturnTypes<State, S1 & S2 & S3 & S4 & S5>,\n    S6 extends Selectors<S1States & S2States & S3States & S4States & S5States>\n  >(\n    selectors1: S,\n    selectors2: S2,\n    selectors3: S3,\n    selectors4: S4,\n    selectors5: S5,\n    selectors6: S6,\n  ): S1 &\n    ReturnTypeSelectors<\n      State,\n      S1States & S2States & S3States & S4States & S5States,\n      S2 & S3 & S4 & S5 & S6\n    >;\n  // ====================================================================================== 7\n  <\n    S extends Selectors<State>,\n    S1 extends WithStateSelector<State, S>,\n    S1States extends SelectorReturnTypes<State, S1>,\n    S2 extends Selectors<S1States>,\n    S2States extends SelectorReturnTypes<State, S1 & S2>,\n    S3 extends Selectors<S1States & S2States>,\n    S3States extends SelectorReturnTypes<State, S1 & S2 & S3>,\n    S4 extends Selectors<S1States & S3States>,\n    S4States extends SelectorReturnTypes<State, S1 & S2 & S3 & S4>,\n    S5 extends Selectors<S1States & S2States & S3States & S4States>,\n    S5States extends SelectorReturnTypes<State, S1 & S2 & S3 & S4 & S5>,\n    S6 extends Selectors<S1States & S2States & S3States & S4States & S5States>,\n    S6States extends SelectorReturnTypes<State, S1 & S2 & S3 & S4 & S5 & S6>,\n    S7 extends Selectors<S1States & S2States & S3States & S4States & S5States & S6States>\n  >(\n    selectors1: S,\n    selectors2: S2,\n    selectors3: S3,\n    selectors4: S4,\n    selectors5: S5,\n    selectors6: S6,\n    selectors7: S7,\n  ): S1 &\n    ReturnTypeSelectors<\n      State,\n      S1States & S2States & S3States & S4States & S5States & S6States,\n      S2 & S3 & S4 & S5 & S6 & S7\n    >;\n};\n\nexport function createSelectorsFn([selectors1, ...args]: any) {\n  return args.reduce(\n    (selectors: any, newSelectors: any) =>\n      combineSelectors<any>()<any, any, any>(selectors, newSelectors),\n    { ...selectors1, state: (state: any) => state },\n  );\n}\n\nexport function createSelectors<State>(): SelectorsCreator<State> {\n  return (...args: any) => {\n    return createSelectorsFn(args);\n  };\n}\n\nfunction combineSelectors<State>() {\n  return <\n    S1 extends Selectors<State>,\n    S1States extends SelectorReturnTypes<State, S1>,\n    S2 extends Selectors<S1States>\n  >(\n    selectors: S1,\n    newSelectors: S2 = {} as S2,\n  ): S1 & ReturnTypeSelectors<State, S1States, S2> => {\n    let latestState: State;\n    let inputResults = {} as Partial<S1States>;\n    let previousInputResults = {} as Partial<S1States>;\n    const selectorInputs = {} as Partial<{ [Key in keyof S2]: Set<keyof S1> }>;\n    const results = {} as Partial<SelectorReturnTypes<S1States, S2>>;\n\n    const newStateSelectors = Object.entries(newSelectors).reduce(\n      (all, [name, fn]) => ({\n        ...all,\n        [name]: (s: State) => {\n          if (s !== latestState) {\n            latestState = s;\n            previousInputResults = inputResults;\n            inputResults = {};\n          }\n          selectorInputs[name as keyof S2] = selectorInputs[name] || new Set();\n          const selectorInputNames = [\n            ...(selectorInputs[name as keyof S2] as Set<keyof S1>),\n          ];\n\n          // If no inputs, just call fn again\n          // If all inputs so far record the same results, the final result will be the same (selectors are deterministic)\n          const sameInputResults =\n            !!selectorInputNames.length &&\n            selectorInputNames.every(inputName => {\n              if (inputResults[inputName] === undefined) {\n                inputResults[inputName] = selectors[inputName](s);\n              }\n              return previousInputResults[inputName] === inputResults[inputName];\n            });\n\n          if (sameInputResults) {\n            if (results[name] === undefined) {\n              results[name as keyof S2] = fn(inputResults as S1States);\n            }\n            return results[name];\n          }\n\n          //   Pass existing inputResults into fn with proxy to watch for additional input selectors being accessed\n          //     (In proxy handler set each cachedInputResult and add to selectorInputNames as needed)\n          //   Set and return cachedResult\n          const handler = {\n            get: function (target: S1States, prop: string) {\n              selectorInputs[name]?.add(prop);\n              const inputResult = target[prop];\n              if (inputResult === undefined) {\n                target[prop as keyof S1] = selectors[prop](s);\n              }\n              return target[prop];\n            },\n          };\n\n          const proxy = new Proxy(inputResults as S1States, handler);\n          const result = fn(proxy);\n          results[name as keyof S2] = result;\n          return result;\n        },\n      }),\n      {} as ReturnTypeSelectors<State, S1States, S2>,\n    );\n\n    return {\n      ...selectors,\n      ...newStateSelectors,\n    };\n  };\n}\n","import { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport function splitSources<\n  K extends string,\n  Message extends { type: K },\n  PartitionKeys extends { [index: string]: K },\n  PartitionedSources extends {\n    [SK in keyof PartitionKeys]: Observable<\n      Message extends Record<'type', PartitionKeys[SK]> ? Message : never\n    >;\n  }\n>(obs$: Observable<Message>, partitions: PartitionKeys) {\n  return Object.entries(partitions).reduce(\n    (sources, [name, type]) => ({\n      ...sources,\n      [name]: obs$.pipe(filter(val => val.type === type)),\n    }),\n    {} as PartitionedSources,\n  );\n}\n","import { Component } from '@angular/core';\nimport md from 'raw-loader!./adapters.md';\n\n@Component({\n  selector: 'state-adapt-adapters',\n  template: `\n    <state-adapt-content>\n      <markdown [data]=\"md\"></markdown>\n      <state-adapt-nav-tile link=\"/concepts/sources\">\n        Sources\n      </state-adapt-nav-tile>\n      <state-adapt-nav-tile [right]=\"true\" link=\"/concepts/stores\">\n        Stores\n      </state-adapt-nav-tile>\n    </state-adapt-content>\n  `,\n})\nexport class AdaptersComponent {\n  md = md;\n}\n","export interface CommonAction {\n  type: string;\n}\n\nexport type Update = [string[], any];\n\nexport const adaptType = 'Adapt';\n\nexport interface PatchState {\n  type: typeof adaptType;\n  source: CommonAction & { payload?: any };\n  payload: Update[];\n}\n\nexport function isPatchState(\n  action: CommonAction | PatchState,\n): action is PatchState {\n  return action.type === adaptType;\n}\n\nexport function createPatchState(\n  source: CommonAction & { payload?: any },\n  payload: Update[],\n): PatchState {\n  return {\n    type: adaptType,\n    source,\n    payload,\n  };\n}\n\nexport function createInit(path: string, initialState: any) {\n  return createPatchState({ type: `INIT ${path}` }, [\n    [path.split('.'), initialState],\n  ]);\n}\n\nexport function createDestroy(path: string) {\n  return createPatchState({ type: `DESTROY ${path}` }, [\n    [path.split('.'), undefined],\n  ]);\n}\n","import { createAdapter, createSelectors } from '@state-adapt/core';\nimport { ListItem, TileSelection } from 'carbon-components-angular';\nimport { AdapterDocsState, INITIAL_STATE } from './adapter-docs-state.interface';\nimport { AdapterDocs } from './adapter-docs.interface';\nimport { DropdownSelectedEvent } from './dropdown-selection-event.interface';\nimport { toJson } from './get-diff-html.function';\n\nfunction wrapInTs(code: string) {\n  return '```typescript\\n' + code + '\\n```';\n}\n\nfunction getListItem(selectedName?: string) {\n  return (name: string, i: number): ListItem => ({\n    content: name,\n    selected: selectedName ? name === selectedName : i === 0,\n  });\n}\n\nconst selectors = createSelectors<AdapterDocsState>()(\n  {\n    adapterStateChangeItems: s =>\n      s.docs.demoAdapter.value\n        ? Object.keys(s.docs.demoAdapter.value)\n            .filter(prop => prop !== 'selectors')\n            .map(getListItem(s.selectedStateChange))\n        : [],\n    adapterSelectorItems: s =>\n      (s.docs.demoAdapter.value?.selectors\n        ? Object.keys(s.docs.demoAdapter.value.selectors)\n        : []\n      ).map(getListItem(s.selectedSelector)),\n    adapterStateChanges: s => s.docs.demoAdapter.stateChanges,\n    adapterSelectors: s => s.docs.demoAdapter.selectors,\n    userSelectedStateChangeName: s => s.selectedStateChange,\n    userSelectedSelectorName: s => s.selectedSelector,\n    demoHistory: s => s.demoHistory,\n    demoState: s => s.demoState,\n    initialDemoState: s => s.docs.demoAdapter.initialState,\n    userPayload: s => s.payload,\n    docs: s => s.docs,\n    creatorSourceCodeMd: s => wrapInTs(s.docs.sourceCode),\n    demoSourceCodeMd: s => wrapInTs(s.docs.demoAdapter.sourceCode),\n    parameters: s => s.docs.parameters,\n    payloadEditorRefreshRequired: s => s.payloadEditorRefreshRequired,\n  },\n  {\n    firstStateChangeName: s => s.adapterStateChangeItems[0]?.content,\n    firstSelectorName: s => s.adapterSelectorItems[0]?.content,\n    selectedHistoryItem: s => s.demoHistory.find(item => item.selected) || null,\n    lastHistoryItem: s => s.demoHistory[s.demoHistory.length - 1],\n    demoStateOrInitial: s =>\n      s.demoState === INITIAL_STATE ? s.initialDemoState : s.demoState,\n  },\n  {\n    selectedStateChangeName: s => s.userSelectedStateChangeName || s.firstStateChangeName,\n    selectedSelectorName: s => s.userSelectedSelectorName || s.firstSelectorName,\n    selectedOrLastHistoryItem: s => s.selectedHistoryItem || s.lastHistoryItem,\n    selectedHistoryItemPayload: s => s.selectedHistoryItem?.inputs.payload,\n  },\n  {\n    selectedStateChange: s => s.adapterStateChanges[s.selectedStateChangeName],\n    selectedSelector: s =>\n      s.adapterSelectors[s.selectedSelectorName] || {\n        documentation: 'Returns state',\n      },\n    diffState: ({ selectedOrLastHistoryItem: item, demoStateOrInitial: state }) =>\n      !item ? [null, state] : [item.inputs.state, item.state],\n  },\n  {\n    diffStateAndSelectorName: s =>\n      [s.diffState, s.selectedSelectorName] as [any[], string],\n    payload: s =>\n      s.selectedHistoryItemPayload || s.userPayload || s.selectedStateChange?.demoPayload,\n  },\n  {\n    demoStateAndPayload: s => ({\n      state: s.demoStateOrInitial,\n      payload: s.payload,\n      initialState: s.initialDemoState,\n      stateChangeName: s.selectedStateChangeName,\n    }),\n    payloadCodeModel: s => ({\n      language: 'json',\n      uri: 'main.json',\n      value: s.payload && toJson(JSON.parse(s.payload)), // Format\n    }),\n  },\n);\n\nexport const docsAdapter = createAdapter<AdapterDocsState>()({\n  receiveDocs: (state, docs: AdapterDocs) => ({ ...state, docs }),\n  selectStateChange: (state: AdapterDocsState, stateChangeName: string) => {\n    const selectionChanged = selectors.selectedStateChangeName(state) !== stateChangeName;\n    return {\n      ...state,\n      selectedStateChange: stateChangeName,\n      payloadEditorRefreshRequired: selectionChanged,\n      payload: selectionChanged ? '' : state.payload,\n    };\n  },\n  resetEditorRefresh: state => ({\n    ...state,\n    payloadEditorRefreshRequired: false,\n  }),\n  setPayload: (state, payload: string) => ({ ...state, payload }),\n  setDemoState: (state, demoState: any) => ({\n    ...state,\n    demoHistory: [\n      ...state.demoHistory,\n      {\n        inputs: selectors.demoStateAndPayload(state),\n        state: demoState,\n        selected: false,\n      },\n    ],\n    demoState,\n  }),\n  selectHistoryItem: (state, index?: number) => ({\n    ...state,\n    demoHistory: state.demoHistory.map((item, i) => ({\n      ...item,\n      selected: i === index,\n    })),\n  }),\n  selectSelector: (state, selectedSelector: string) => ({\n    ...state,\n    selectedSelector,\n  }),\n  selectors,\n});\n\nexport const docsUiAdapter = createAdapter<AdapterDocsState>()({\n  ...docsAdapter,\n  selectStateChange: (state, { item }: DropdownSelectedEvent) =>\n    docsAdapter.selectStateChange(state, item.content),\n  selectStateChangeFromHistory: (state, selection: TileSelection) => {\n    const historyItem = state.demoHistory.find((item, i) => i === +selection.value);\n    return docsAdapter.selectStateChange(\n      state,\n      historyItem?.inputs.stateChangeName || '',\n    );\n  },\n  selectHistoryItem: (state, selection?: TileSelection) =>\n    docsAdapter.selectHistoryItem(state, +(selection?.value || '-1')),\n  selectSelector: (state, { item }: DropdownSelectedEvent) =>\n    docsAdapter.selectSelector(state, item.content),\n});\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConceptsOverviewComponent } from './concepts/overview.component';\nimport { SourcesComponent } from './concepts/sources.component';\nimport { AdaptersComponent } from './concepts/adapters.component';\nimport { DemosComponent } from './demos/demos.component';\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\nimport { IntroComponent } from './intro/intro.component';\nimport { StoresComponent } from './concepts/stores.component';\nimport { ThinkingReactivelyComponent } from './concepts/thinking-reactively.component';\nimport { AdaptersCoreComponent } from './adapters/adapters-core.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: IntroComponent,\n  },\n  // {\n  //   path: 'dashboards',\n  //   loadChildren: () =>\n  //     import('@state-adapt/dashboards-feature').then(\n  //       m => m.DashboardsFeatureRoutingModule,\n  //     ),\n  // },\n  {\n    path: 'getting-started',\n    component: GettingStartedComponent,\n  },\n  {\n    path: 'demos',\n    component: DemosComponent,\n  },\n  {\n    path: 'dashboards',\n    loadChildren: () =>\n      import('@state-adapt/dashboards-feature').then(\n        m => m.DashboardsFeatureRoutingModule,\n      ),\n  },\n  {\n    path: 'concepts',\n    children: [\n      {\n        path: 'overview',\n        component: ConceptsOverviewComponent,\n      },\n      {\n        path: 'sources',\n        component: SourcesComponent,\n      },\n      {\n        path: 'adapters',\n        component: AdaptersComponent,\n      },\n      {\n        path: 'stores',\n        component: StoresComponent,\n      },\n      {\n        path: 'thinking-reactively',\n        component: ThinkingReactivelyComponent,\n      },\n    ],\n  },\n  {\n    path: 'adapters/:adapterName',\n    component: AdaptersCoreComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      scrollOffset: [0, 50],\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport md from 'raw-loader!./intro.md';\n\n@Component({\n  selector: 'state-adapt-intro',\n  templateUrl: `./intro.component.html`,\n  styleUrls: ['./intro.component.scss'],\n})\nexport class IntroComponent {\n  secondary = false;\n  md = md;\n}\n","<div class=\"banner\">\n  <state-adapt-circuits></state-adapt-circuits>\n  <div class=\"banner-content-container\">\n    <div class=\"logo-line\">\n      <img src=\"../assets/sa-9-7.svg\" id=\"main-logo\" />\n      <div id=\"main-logo-shadow\"></div>\n      <h1 id=\"state\">State</h1>\n      <h1 id=\"adapt\">Adapt</h1>\n    </div>\n    <h3>\n      <a href=\"#minimal\">Minimal</a>\n      <svg class=\"bullet-adapter\"><use xlink:href=\"#adapter\" /></svg>\n      <a href=\"#reactive\">Reactive</a>\n      <svg class=\"bullet-adapter\"><use xlink:href=\"#adapter\" /></svg>\n      <a href=\"#reusable\">Reusable</a>\n    </h3>\n    <div class=\"getting-started-container\">\n      <a routerLink=\"/getting-started\" class=\"getting-started\">\n        <button\n          ibmButton=\"secondary\"\n          id=\"get-started\"\n          (mouseenter)=\"secondary = true\"\n          (mouseleave)=\"secondary = false\"\n        >\n          Get Started\n        </button>\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\"content\">\n  <state-adapt-content>\n    <markdown [data]=\"md\"></markdown>\n  </state-adapt-content>\n</div>\n","export default \"import { createBasicAdapter } from '@state-adapt/core';\\n\\ninterface DemoState {\\n  prop1: string;\\n  prop2: string;\\n}\\n\\nexport const basicAdapter = createBasicAdapter<DemoState>();\\n\";","import { Component } from '@angular/core';\nimport md from 'raw-loader!./thinking-reactively.md';\n\n@Component({\n  selector: 'state-adapt-thinking-reactively',\n  template: `\n    <state-adapt-content>\n      <markdown [data]=\"md\"></markdown>\n      <state-adapt-nav-tile link=\"/concepts/stores\">\n        Stores\n      </state-adapt-nav-tile>\n    </state-adapt-content>\n  `,\n})\nexport class ThinkingReactivelyComponent {\n  md = md;\n}\n","import type { Update } from './adapt.actions';\n\nexport function updatePaths<T>(oldState: T, updates: Update[]): T {\n  let newValEntry: Update | undefined;\n  const nextLevelUpdatedState = updates.reduce(\n    (stateWithUpdates, [remainingPath, newVal]) => {\n      const nextSegment = (remainingPath[0] || '') as keyof T;\n      const otherUpdatesForSegment = stateWithUpdates[nextSegment];\n      // There can only be one empty remaining path at each level. That gets assigned to the '' property.\n\n      if (!nextSegment) {\n        newValEntry = [[], newVal];\n        return stateWithUpdates;\n      }\n\n      return {\n        ...stateWithUpdates,\n        [nextSegment]: otherUpdatesForSegment\n          ? [...otherUpdatesForSegment, [remainingPath.slice(1), newVal]]\n          : [[remainingPath.slice(1), newVal]],\n      };\n    },\n    {} as { [K in keyof T]: Update[] },\n  );\n\n  const wasObject = getIsObject(oldState);\n\n  return newValEntry\n    ? newValEntry[1]\n    : Object.entries(nextLevelUpdatedState).reduce(\n        (state, [prop, childUpdates]) => ({\n          ...(state || ({} as T)),\n          [prop]: updatePaths(\n            (state || ({} as any))[prop] || {},\n            childUpdates as Update[],\n          ),\n        }),\n        (wasObject ? oldState : {}) as T,\n      );\n}\n\nfunction getIsObject(thing: any) {\n  return typeof thing === 'object' && !Array.isArray(thing);\n}\n","import { Location } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Event, Router, RouterEvent } from '@angular/router';\nimport { merge, Subject } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'state-adapt-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  sidenavExpanded = window.innerWidth > 800;\n  urlChange$ = new Subject<string>();\n  links$ = merge(\n    this.urlChange$,\n    this.router.events.pipe(\n      filter((e: Event): e is RouterEvent => e instanceof RouterEvent),\n      map(e => e.url),\n    ),\n  ).pipe(\n    startWith(this.location.path()),\n    map(url => [\n      {\n        route: '',\n        name: 'Introduction',\n        active: url === '',\n      },\n      // {\n      //   route: '/dashboards',\n      //   name: 'Demo App',\n      //   active: url.includes('/dashboards'),\n      // },\n      {\n        route: '/getting-started',\n        name: 'Getting Started',\n        active: url.includes('/getting-started'),\n      },\n      {\n        route: '/demos',\n        name: 'Demos',\n        active: url.includes('/demos'),\n      },\n      {\n        route: '/concepts',\n        name: 'Concepts',\n        children: [\n          ['overview', 'Overview'],\n          ['sources', 'Sources'],\n          ['adapters', 'Adapters'],\n          ['stores', 'Stores'],\n          ['thinking-reactively', 'Thinking Reactively'],\n        ].map(child => this.mapToChildRoute(url, '/concepts/', child)),\n      },\n      {\n        route: '/adapters',\n        name: 'Adapters',\n        children: [['core', 'Core']].map(child =>\n          this.mapToChildRoute(url, '/adapters/', child),\n        ),\n      },\n    ]),\n  );\n  constructor(private location: Location, private router: Router) {\n    const path = localStorage.getItem('path');\n    if (path) {\n      localStorage.removeItem('path');\n      this.router.navigate([path]);\n    }\n  }\n\n  navigate(e: any) {\n    setTimeout(() => this.urlChange$.next(this.location.path()));\n  }\n\n  trackByRoute(id: number, item: { route: string }) {\n    return item.route;\n  }\n\n  expandSidenav() {\n    this.sidenavExpanded = !this.sidenavExpanded;\n  }\n\n  private mapToChildRoute(\n    url: string,\n    baseUrl: string,\n    [childUrl, childName]: string[],\n  ) {\n    const route = baseUrl + childUrl;\n    const hashUrl = new RegExp(/#.*/);\n    return {\n      route,\n      active: url.replace(hashUrl, '') === route,\n      name: childName,\n    };\n  }\n}\n","<ibm-header name=\"StateAdapt\" [brand]=\"brandTemplate\">\n  <ibm-hamburger (click)=\"expandSidenav()\"></ibm-hamburger>\n</ibm-header>\n<ng-template #brandTemplate>\n  <a href=\"/\" class=\"brand\"\n    ><img src=\"../assets/sa-9-7.svg\" />StateAdapt</a\n  ></ng-template\n>\n<ibm-sidenav [expanded]=\"sidenavExpanded\">\n  <ng-container *ngFor=\"let link of links$ | async; trackBy: trackByRoute\">\n    <ibm-sidenav-item\n      *ngIf=\"!link.children\"\n      [route]=\"[link.route]\"\n      [active]=\"link.active\"\n      (navigation)=\"navigate(null)\"\n      >{{ link.name }}</ibm-sidenav-item\n    >\n    <ibm-sidenav-menu *ngIf=\"link.children\" [title]=\"link.name\">\n      <ibm-sidenav-item\n        *ngFor=\"let childLink of link.children; trackBy: trackByRoute\"\n        [route]=\"[childLink.route]\"\n        [active]=\"childLink.active\"\n        (navigation)=\"navigate(null)\"\n        >{{ childLink.name }}</ibm-sidenav-item\n      >\n    </ibm-sidenav-menu>\n  </ng-container>\n  <!-- I will manually decide which to import in app.component.ts and *NgFor each library here. -->\n  <!-- Each adapter library will export metadata with it to be easy to add to documentation. -->\n  <!-- There will be a core adapter demo library with components for demoing. That will be loaded by this router -->\n  <!-- and metadata from libraries will be passed in through dependency injection or loaded some other way. -->\n</ibm-sidenav>\n<main [class.squished]=\"sidenavExpanded\">\n  <router-outlet></router-outlet>\n</main>\n","export * from './lib/adapter-docs.interface';\nexport * from './lib/get-diff-html.function';\nexport * from './lib/adapter-docs.module';\n","export default \"# Adapters\\n\\n- [Overview](/concepts/adapters#overview)\\n- [State Changes](/concepts/adapters#state-changes)\\n- [Selectors](/concepts/adapters#selectors)\\n- [`createAdapter`](/concepts/adapters#createadapter)\\n- [Extending Adapters](/concepts/adapters#extending-adapters)\\n- [`createSelectors`](/concepts/adapters#createselectors)\\n- [Adapter Creator Libraries](/concepts/adapters#adapter-creator-libraries)\\n\\n## Overview\\n\\nAdapters are objects containing 2 kinds of reusable state management patterns: State changes and selectors.\\n\\n## State Changes\\n\\nState change functions are pure functions that implement ways state can change. They take 3 arguments and return a new state:\\n\\n```typescript\\n(\\n  state, // Current state\\n  payload, // Data needed to calculate new state\\n  initialState, // State the adapter was initialized with\\n) => ({...state}), // New state\\n```\\n\\n## Selectors\\n\\nSelectors are pure functions that calculate derived state or just return a specific piece of state. They take one argument (`State`) and return any type:\\n\\n```typescript\\nstate => state.property,\\n```\\n\\nSince these functions are only referenced and never called in your code, the convention is to name them nouns instead of verbs (e.g. `state` instead of `getState`). Another reason is explained in [`createSelectors`](/concepts/adapters#createselectors).\\n\\n## `createAdapter`\\n\\ncreateAdapter provides type inference when creating state adapters, which is convenient because every state change and selector starts with the same type (`State`), and every state change returns that type as well. Here is an example using createAdapter:\\n\\n```typescript\\nimport { createAdapter } from '@state-adapt/core';\\n\\nconst numberAdapter = createAdapter<number>()({\\n  add: (state, n: number) => state + n,\\n  subtract: (state, n: number) => state - n,\\n  selectors: {\\n    negative: state => state * -1,\\n  },\\n});\\n```\\n\\nDefining selectors is optional.\\n\\nEvery adapter comes with 3 default state reactions:\\n\\n`set` replaces the old state with a new one\\n\\n`update` replaces specific properties of the old state by spreading the object passed in\\n\\n`reset` resets to the original state the adapter was initialized with\\n\\nEvery adapter also comes with a default selector:\\n\\n`state` returns the top-level state value\\n\\n## Extending Adapters\\n\\nYou can extend the functionality of existing adapters when creating new adapters. Here is an example that extends the number adapter from above:\\n\\n```typescript\\nimport { createAdapter } from '@state-adapt/core';\\nimport { numberAdapter } from './number.adapter';\\n\\nconst numberStringAdapter = createAdapter<number>()({\\n  ...numberAdapter,\\n  addFromStr: (state, str: string) => numberAdapter.add(state, +str),\\n  selectors: {\\n    ...numberAdapter.selectors,\\n    stateStr: state => state.toString(),\\n  },\\n});\\n```\\n\\n## `createSelectors`\\n\\n`createAdapter` memoizes selectors passed into the `selectors` property, but it only does so shallowly. `createSelectors` provides full selector memoization and a default `state` selector (after the first argument). It takes up to 7 selector objects as arguments, each one receiving all of the selectors from the previous selector objects.\\n\\n```typescript\\nimport { createSelectors, createAdapter } from '@state-adapt/core';\\n\\nconst selectors = createSelectors<string>()(\\n  {\\n    reverse: s => s.split('').reverse().join(''),\\n  },\\n  {\\n    isPalendrome: s => s.reverse === s.state,\\n  },\\n);\\n\\nconst stringAdapter = createAdapter<string>()({ selectors });\\n```\\n\\nReuse selectors from anywhere:\\n\\n```typescript\\nimport { createAdapter, createSelectors } from '@state-adapt/core';\\nimport { numberAdapter } from './number.adapter';\\n\\nconst numberStringAdapter = createAdapter<number>()({\\n  ...numberAdapter,\\n  selectors: createSelectors(numberAdapter.selectors, {\\n    negative: s => s.negative.toString(),\\n  }),\\n});\\n```\\n\\n`s` is typed the same as the selectors object passed in as the first argument, except using the return type of each selector instead of the selector itself. Internally, `createSelectors` uses a `Proxy` to detect which selectors your new selector functions are accessing in order memoize them efficiently. You could think of `s` as referencing either the selectors object you passed in, or a derived state object created by calling those selectors for each object key. This dual reference is why the convention is to name it `s` instead of either `selectors` or `state`.\\n\\n`createSelectors` is another reason for naming selectors as nouns instead of verbs: Either it would need to do extra, unnecessary processing to add `'get'`s in the `Proxy` property accessor method to find the correct selectors, or developers would need to treat verbs as nouns in their selector functions, which would be awkward: `s => s.getNegative.toString()`.\\n\\n## Adapter Creator Libraries\\n\\nComing soon\\n\";","import { createSelector } from 'reselect';\nimport flatten from 'lodash-es/flatten';\nimport { defer, merge, NEVER, Observable, of, using } from 'rxjs';\nimport { distinctUntilChanged, filter, finalize, share, tap } from 'rxjs/operators';\nimport type { Action } from './action.interface';\nimport { createDestroy, createInit, createPatchState } from './adapt.actions';\nimport { Adapter, ReactionsWithSelectors } from './adapter.type';\nimport { createBasicAdapter } from './create-basic-adapter.function';\nimport { MiniStore } from './mini-store.interface';\nimport { Reactions } from './reactions.interface';\nimport { Selections } from './selections.type';\nimport { Selectors } from './selectors.interface';\nimport { Sources } from './sources.type';\nimport { BasicAdapterMethods } from './create-adapter.function';\n\nconst filterDefined = <T>(sel$: Observable<T>) =>\n  sel$.pipe(\n    filter(a => a !== undefined),\n    distinctUntilChanged(),\n  );\n\ninterface StoreMethods {\n  select: (sel: any) => Observable<any>;\n  dispatch: (action: any) => any;\n}\n\ninterface PathState {\n  [index: string]: { lastState: any; initialState: any };\n}\n\ninterface UpdaterStream {\n  source$: Observable<Action<any>>;\n  requireSources$: Observable<any>;\n  reactions: {\n    path: string;\n    reaction: (...args: any[]) => any;\n  }[];\n}\n\nexport class AdaptCommon<CommonStore extends StoreMethods> {\n  private pathStates: PathState = {};\n  private updaterStreams: UpdaterStream[] = [];\n\n  constructor(private commonStore: CommonStore) {}\n\n  init<State, S extends Selectors<State>, R extends ReactionsWithSelectors<State, S>>(\n    [path, adapter, initialState]: [string, Adapter<State, S, R>, State],\n    sources: Sources<State, S, R>,\n  ): MiniStore<State, S & { state: (state: any) => State }> {\n    // type S = R['selectors'];\n    const selectors = adapter.selectors || ({} as S);\n    const reactions = { ...adapter } as Reactions<State>;\n    delete reactions.selectors;\n    const requireSources$ = this.getRequireSources<State, S, R>(\n      reactions,\n      path,\n      sources,\n      initialState,\n    );\n\n    const getState = this.getStateSelector<State>(path);\n    const { fullSelectors, selections } = this.getSelections<State, S>(\n      selectors,\n      getState,\n      requireSources$,\n    );\n\n    return {\n      ...selections,\n      _requireSources$: requireSources$,\n      _fullSelectors: fullSelectors,\n      _select: (sel: any) => filterDefined(this.commonStore.select(sel)),\n    };\n  }\n\n  initGet<State, S extends Selectors<State>, R extends ReactionsWithSelectors<State, S>>(\n    [path, adapter, initialState]: [string, Adapter<State, S, R>, State],\n    sources: Sources<State, S, R>,\n  ): Observable<State> {\n    const reactions = { ...adapter } as Reactions<State>;\n    delete reactions.selectors;\n    const requireSources$ = this.getRequireSources<State, S, R>(\n      reactions,\n      path,\n      sources,\n      initialState,\n    );\n\n    const getState = this.getStateSelector<State>(path);\n\n    return using(\n      () => requireSources$.subscribe(),\n      () => filterDefined(this.commonStore.select(getState)),\n    );\n  }\n\n  setter<State>(\n    path: string,\n    initialState: State,\n    source$: Observable<Action<State>> | Observable<Action<State>>[],\n  ) {\n    return this.initGet([path, createBasicAdapter<State>(), initialState], {\n      set: source$,\n    });\n  }\n  updater<State>(\n    path: string,\n    initialState: State,\n    source$: Observable<Action<Partial<State>>> | Observable<Action<Partial<State>>>[],\n  ) {\n    return this.initGet([path, createBasicAdapter<State>(), initialState], {\n      update: source$,\n    });\n  }\n\n  spy<State, S extends Selectors<State>, R extends ReactionsWithSelectors<State, S>>(\n    path: string,\n    adapter: Adapter<State, S, R & BasicAdapterMethods<State>>,\n    // Returns a detached store; doesn't chain off of sources.\n  ): MiniStore<State, S & { state: (state: any) => State }> {\n    const selectors = adapter.selectors || ({} as S);\n    const getState = this.getStateSelector<State>(path);\n    const requireSources$ = of(null);\n    const { fullSelectors, selections } = this.getSelections<State, S>(\n      selectors,\n      getState,\n      requireSources$,\n    );\n    return {\n      ...selections,\n      _requireSources$: requireSources$,\n      _fullSelectors: fullSelectors,\n      _select: (sel: any) => filterDefined(this.commonStore.select(sel)),\n    };\n  }\n\n  private getRequireSources<\n    State,\n    S extends Selectors<State>,\n    R extends ReactionsWithSelectors<State, S>\n  >(\n    reactions: Reactions<State>,\n    path: string,\n    sources: Sources<State, S, R>,\n    initialState: State,\n  ): Observable<any> {\n    const reactionEntries = Object.entries(reactions);\n    const allSourcesWithReactions = flatten(\n      reactionEntries.map(([reactionName, reaction]) => {\n        const reactionSource = sources[reactionName] || [];\n        const reactionSources = Array.isArray(reactionSource)\n          ? reactionSource\n          : [reactionSource];\n        return reactionSources.map(source$ => ({ source$, reaction }));\n      }),\n    );\n\n    const allUpdatesFromSources$ = allSourcesWithReactions.map(\n      ({ source$, reaction }, i) => {\n        // Source-grouped updates:\n        return defer(() => {\n          const updaterStream = this.getSourceUpdateStream(source$);\n          const requireSources$ = updaterStream\n            ? updaterStream.requireSources$\n            : source$.pipe(\n                tap(action => {\n                  const updates = this.getAllSourceUpdates(source$, action);\n                  this.commonStore.dispatch(createPatchState(action, updates));\n                }),\n                finalize(() => {\n                  this.updaterStreams.splice(\n                    this.updaterStreams.findIndex(\n                      ({ source$: updaterSource$ }) => source$ === updaterSource$,\n                    ),\n                    1,\n                  );\n                }),\n                share(),\n              );\n          if (!updaterStream) {\n            this.updaterStreams.push({\n              source$,\n              requireSources$,\n              reactions: [],\n            });\n          }\n          // Now there is definitely an update stream for this source, so push this reaction onto it\n          const updateStream = this.getSourceUpdateStream(source$);\n          updateStream?.reactions.push({ path, reaction });\n          return requireSources$;\n        }).pipe(share());\n      },\n    );\n\n    const requireSources$ = defer(() => {\n      // Runs First. If any of the sources emits immediately, this needs to have been set up first.\n      const colllisionPath = this.getPathCollisions(path);\n      if (colllisionPath) {\n        throw this.getPathCollisionError(path, colllisionPath);\n      }\n      this.commonStore.dispatch(createInit(path, initialState));\n      this.pathStates[path] = { lastState: initialState, initialState };\n      return merge(...allUpdatesFromSources$, NEVER); // If sources all complete, keep state in the store\n    }).pipe(\n      finalize(() => {\n        // Runs Last to clean up the store:\n        allSourcesWithReactions.forEach(({ source$ }) => {\n          const updateStream = this.getSourceUpdateStream(source$);\n          const updateReactions = updateStream?.reactions || [];\n          updateReactions.splice(\n            updateReactions.findIndex(({ path: reactionPath }) => reactionPath === path),\n            1,\n          );\n        });\n        delete this.pathStates[path];\n        this.commonStore.dispatch(createDestroy(path));\n      }),\n      share(),\n    );\n\n    return requireSources$;\n  }\n\n  private getSourceUpdateStream(searchSource$: Observable<Action<any>>) {\n    return this.updaterStreams.find(\n      ({ source$ }) => searchSource$ === source$,\n    ) as UpdaterStream;\n  }\n\n  private getAllSourceUpdates(\n    source$: Observable<Action<any>>,\n    { payload }: Action<any>,\n  ): [string[], any][] {\n    return this.getSourceUpdateStream(source$).reactions.map(({ path, reaction }) => {\n      const pathState = this.pathStates[path];\n      const { lastState, initialState } = pathState;\n      const newState = reaction(lastState, payload, initialState);\n      pathState.lastState = newState;\n      return [path.split('.'), newState];\n    });\n  }\n\n  private getStateSelector<State>(path: string): ({ adapt }: { adapt: any }) => State {\n    return ({ adapt }) =>\n      path.split('.').reduce((state, segment) => state && state[segment], adapt);\n  }\n\n  private getPathCollisions(path: string) {\n    return Object.keys(this.pathStates).find(\n      existingPath =>\n        path === existingPath ||\n        existingPath + '.' === path.substr(0, existingPath.length + 1) ||\n        path + '.' === existingPath.substr(0, path.length + 1),\n    );\n  }\n\n  private getPathCollisionError(path: string, existingPath: string) {\n    return new Error(\n      `Path '${path}' collides with '${existingPath}', which has already been initialized as a state path.`,\n    );\n  }\n\n  private getSelections<State, S extends Selectors<State>>(\n    selectors: S,\n    getState: ({ adapt }: { adapt: any }) => State,\n    requireSources$: Observable<any>,\n  ): {\n    fullSelectors: S & { state: () => State };\n    selections: Selections<State, S>;\n  } {\n    const getUsing = <T>(selection$: Observable<T>) =>\n      using(\n        () => requireSources$.subscribe(),\n        () => filterDefined(selection$),\n      );\n    const selections: {\n      fullSelectors: S & { state: () => State };\n      selections: Selections<State, S>;\n    } = Object.keys(selectors).reduce(\n      (selected, key) => {\n        const fullSelector = createSelector([getState], (state: State, props: any) =>\n          state !== undefined ? selectors[key](state, props) : state,\n        );\n        return {\n          fullSelectors: { ...selected.fullSelectors, [key]: fullSelector },\n          selections: {\n            ...selected.selections,\n            [key + '$']: getUsing(this.commonStore.select(fullSelector)),\n          },\n        };\n      },\n      {\n        fullSelectors: { state: getState },\n        selections: {\n          state$: getUsing(this.commonStore.select(getState)),\n        },\n      } as {\n        fullSelectors: S & { state: () => State };\n        selections: Selections<State, S>;\n      },\n    );\n\n    return selections;\n  }\n}\n","import { Component } from '@angular/core';\nimport md from 'raw-loader!./sources.md';\n\n@Component({\n  selector: 'state-adapt-sources',\n  template: `\n    <state-adapt-content>\n      <markdown [data]=\"md\"></markdown>\n      <state-adapt-nav-tile link=\"/concepts/overview\">\n        Overview\n      </state-adapt-nav-tile>\n      <state-adapt-nav-tile [right]=\"true\" link=\"/concepts/adapters\">\n        Adapters\n      </state-adapt-nav-tile>\n    </state-adapt-content>\n  `,\n})\nexport class SourcesComponent {\n  md = md;\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}