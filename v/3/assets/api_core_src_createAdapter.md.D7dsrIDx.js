import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.DjwDO6w3.js";const o=JSON.parse('{"title":"Function: createAdapter()","description":"","frontmatter":{"definedIn":"https://github.com/state-adapt/state-adapt/blob/4e457fa33331f265d75eaddb646761782498dd8e/libs/core/src/lib/adapters/create-adapter.function.ts#L66"},"headers":[],"relativePath":"api/core/src/createAdapter.md","filePath":"api/core/src/createAdapter.md"}'),n={name:"api/core/src/createAdapter.md"};function h(l,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="function-createadapter" tabindex="-1">Function: createAdapter() <a class="header-anchor" href="#function-createadapter" aria-label="Permalink to &quot;Function: createAdapter()&quot;">​</a></h1><blockquote><p><strong>createAdapter</strong>&lt;<code>State</code>&gt;(): &lt;<code>S</code>, <code>R</code>&gt;(<code>adapter</code>) =&gt; <code>InitializedAdapter</code>&lt;<code>State</code>, <code>S</code>, <code>R</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/state-adapt/state-adapt/blob/4e457fa33331f265d75eaddb646761782498dd8e/libs/core/src/lib/adapters/create-adapter.function.ts#L66" target="_blank" rel="noreferrer">src/lib/adapters/create-adapter.function.ts:66</a></p><p><code>createAdapter</code> is a function that takes an <a href="./Adapter.html">Adapter</a> object and returns a new <a href="./Adapter.html">Adapter</a> object with the following state change functions added:</p><ul><li><code>set</code>: A reaction that sets the state to the payload</li><li><code>reset</code>: A reaction that sets the state to the initial state</li></ul><p>Every adapter also comes with a default selector:</p><ul><li><code>state</code> returns the top-level state value</li></ul><h4 id="example-empty-initial-adapter-object" tabindex="-1">Example: Empty initial adapter object <a class="header-anchor" href="#example-empty-initial-adapter-object" aria-label="Permalink to &quot;Example: Empty initial adapter object&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">createAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;"> numberAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">createAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;">number</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">&gt;()({});</span></span></code></pre></div><h4 id="example-small-initial-adapter-object" tabindex="-1">Example: Small initial adapter object <a class="header-anchor" href="#example-small-initial-adapter-object" aria-label="Permalink to &quot;Example: Small initial adapter object&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">createAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;"> numberAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">createAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;">number</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">&gt;()({</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  add</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> (</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">n</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">: </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;">number</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">) </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">=&gt;</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> + </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">n</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  subtract</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> (</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">n</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">: </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;">number</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">) </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">=&gt;</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> - </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">n</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  selectors</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">    negative</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;"> state</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> =&gt;</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> * -</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">1</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">  },</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">});</span></span></code></pre></div><h4 id="example-initial-adapter-object-with-complex-state" tabindex="-1">Example: Initial adapter object with complex state <a class="header-anchor" href="#example-initial-adapter-object-with-complex-state" aria-label="Permalink to &quot;Example: Initial adapter object with complex state&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">createAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">interface</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;"> ComplexState</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  count</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">: </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;">number</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  name</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">: </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;">string</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;"> complexAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">createAdapter</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;">ComplexState</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">&gt;()({</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  increment</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;"> state</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> =&gt;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> ({ ...</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">count</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">count</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> + </span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">1</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> }),</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  decrement</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;"> state</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> =&gt;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> ({ ...</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">count</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">count</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> - </span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">1</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> }),</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  setName</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> (</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">name</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">: </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;">string</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">) </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">=&gt;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> ({ ...</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">name</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> }),</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  selectors</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">    negative</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;"> state</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> =&gt;</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> state</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">count</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> * -</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">1</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">  },</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">});</span></span></code></pre></div><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="state" tabindex="-1">State <a class="header-anchor" href="#state" aria-label="Permalink to &quot;State&quot;">​</a></h3><p><code>State</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>&lt;<code>S</code>, <code>R</code>&gt;(<code>adapter</code>): <code>InitializedAdapter</code>&lt;<code>State</code>, <code>S</code>, <code>R</code>&gt;</p></blockquote><h3 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><h4 id="s" tabindex="-1">S <a class="header-anchor" href="#s" aria-label="Permalink to &quot;S&quot;">​</a></h4><p><code>S</code> <em>extends</em> <code>Selectors</code>&lt;<code>State</code>&gt;</p><h4 id="r" tabindex="-1">R <a class="header-anchor" href="#r" aria-label="Permalink to &quot;R&quot;">​</a></h4><p><code>R</code> <em>extends</em> <code>ReactionsWithSelectors</code>&lt;<code>State</code>, <code>S</code>&gt;</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><h4 id="adapter" tabindex="-1">adapter <a class="header-anchor" href="#adapter" aria-label="Permalink to &quot;adapter&quot;">​</a></h4><p><a href="./Adapter.html"><code>Adapter</code></a>&lt;<code>State</code>, <code>S</code>, <code>R</code>&gt;</p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>InitializedAdapter</code>&lt;<code>State</code>, <code>S</code>, <code>R</code>&gt;</p>`,28)]))}const F=i(n,[["render",h]]);export{o as __pageData,F as default};
