"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[253],{7253:(u,o,e)=>{e.r(o),e.d(o,{GetStartedReactComponent:()=>d});var s=e(1917),p=e(2309),t=e(4650);let d=(()=>{class a{constructor(){this.html='<h2 id="tutorials">Tutorials</h2>\n<p><a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/react#1-start-with-simple-state\'})); void(0)">Basic Syntax</a></p>\n<h2 id="documentation">Documentation</h2>\n<p><a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/react/docs/react\'})); void(0)">@state-adapt/react</a></p>\n<h2 id="setup">Setup</h2>\n<p><a href="react/get-started#react">React</a></p>\n<p><a href="react/get-started#react-and-redux">React and Redux</a></p>\n<h3 id="react">React</h3>\n<p><a href="https://stackblitz.com/edit/vitejs-vite-qcthao?file=src%2Fmain.tsx,src%2FCounter.tsx&terminal=dev">StackBlitz demo</a></p>\n<p>First, <code>npm install</code>:</p>\n<pre><code>npm i -s rxjs\nnpm i -s @state-adapt/{core,rxjs,react}\n</code></pre>\n<p>Create a file named <code>state-adapt.ts</code> and export <code>watch</code> and <code>adapt</code>:</p>\n<pre><code class="language-typescript">import { defaultStateAdapt } from &#39;@state-adapt/react&#39;;\n\nexport const stateAdapt = defaultStateAdapt;\nexport const { adapt, watch } = stateAdapt;\n</code></pre>\n<p>Provide StateAdapt in your app context:</p>\n<pre><code class="language-tsx">import { AdaptContext } from &#39;@state-adapt/react&#39;;\nimport { stateAdapt } from &#39;./state-adapt&#39;;\n// ...\n  &lt;AdaptContext.Provider value={stateAdapt}&gt;\n    &lt;React.StrictMode&gt;\n      &lt;App /&gt;\n    &lt;/React.StrictMode&gt;\n  &lt;/AdaptContext.Provider&gt;,\n</code></pre>\n<p>And now you can use it in your components:</p>\n<pre><code class="language-tsx">import { useAdapt } from &#39;@state-adapt/react&#39;;\n// ...\nconst [name, nameStore] = useAdapt(&#39;Bob&#39;);\nconsole.log(name.state);\n</code></pre>\n<p>For more configuration options, see <a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/docs/react\'})); void(0)">@state-adapt/react</a>.</p>\n<p>Go to <a href="react/get-started#tutorials">Tutorials</a> for help on how to use StateAdapt after setup.</p>\n<h3 id="react-and-redux">React and Redux</h3>\n<p><a href="https://stackblitz.com/edit/vitejs-vite-ucaub3?file=src%2Fstore.tsx,src%2Fmain.tsx,src%2FCounter.tsx&terminal=dev">StackBlitz demo</a></p>\n<p>First, <code>npm install</code>:</p>\n<pre><code>npm i -s rxjs\nnpm i -s @state-adapt/{core,rxjs,react}\n</code></pre>\n<p>Define your Redux store:</p>\n<pre><code class="language-typescript">import {\n  adaptReducer,\n  actionSanitizer,\n  stateSanitizer,\n} from &#39;@state-adapt/core&#39;;\nimport { configureStateAdapt } from &#39;@state-adapt/rxjs&#39;;\nimport { configureStore } from &#39;@reduxjs/toolkit&#39;;\n\nexport const store = configureStore({\n  reducer: {\n    adapt: adaptReducer,\n    // Any other reducers you have with Redux\n  },\n  devTools: (window as any).__REDUX_DEVTOOLS_EXTENSION__\n    ? {\n        actionSanitizer: actionSanitizer as any,\n        stateSanitizer: stateSanitizer as any,\n      }\n    : false,\n});\nexport const stateAdapt = configureStateAdapt({ store });\nexport const { adapt, watch } = stateAdapt;\n</code></pre>\n<p>Provide StateAdapt in your app context:</p>\n<pre><code class="language-tsx">import { Provider } from &#39;react-redux&#39;;\nimport { AdaptContext } from &#39;@state-adapt/react&#39;;\nimport { stateAdapt, store } from &#39;./store&#39;;\n// ...\n  &lt;AdaptContext.Provider value={stateAdapt}&gt;\n    &lt;Provider store={store}&gt;\n      &lt;React.StrictMode&gt;\n        &lt;App /&gt;\n      &lt;/React.StrictMode&gt;\n    &lt;/Provider&gt;\n  &lt;/AdaptContext.Provider&gt;,\n</code></pre>\n<p>And now you can use it in your components:</p>\n<pre><code class="language-tsx">import { useAdapt } from &#39;@state-adapt/react&#39;;\n// ...\nconst [name, nameStore] = useAdapt(&#39;Bob&#39;);\nconsole.log(name.state);\n</code></pre>\n<p>For more configuration options, see <a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/docs/react\'})); void(0)">@state-adapt/react</a>.</p>\n<p>Go to <a href="react/get-started#tutorials">Tutorials</a> for help on how to use StateAdapt after setup.</p>\n'}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=t.Xpm({type:a,selectors:[["sa-get-started-react"]],standalone:!0,features:[t.jDz],decls:2,vars:1,consts:[[3,"html"]],template:function(n,i){1&n&&(t.TgZ(0,"sa-content"),t._UZ(1,"sa-html",0),t.qZA()),2&n&&(t.xp6(1),t.Q6J("html",i.html))},dependencies:[p.S,s.XB],encapsulation:2}),a})()}}]);