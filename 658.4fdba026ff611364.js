"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[658],{2658:(c,o,a)=>{a.r(o),a.d(o,{GetStartedAngularComponent:()=>i});var p=a(1917),s=a(2309),t=a(4650);let i=(()=>{class e{constructor(){this.html='<h2 id="tutorials">Tutorials</h2>\n<p><a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/angular#1-start-with-simple-state\'})); void(0)">Basic Syntax</a></p>\n<h2 id="documentation">Documentation</h2>\n<p><a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/docs/angular\'})); void(0)">@state-adapt/angular</a></p>\n<p><a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/docs/ngrx\'})); void(0)">@state-adapt/ngrx</a></p>\n<p><a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/docs/ngxs\'})); void(0)">@state-adapt/ngxs</a></p>\n<h2 id="setup">Setup</h2>\n<p><a href="angular/get-started#angular">Angular</a></p>\n<p><a href="angular/get-started#angular-and-ngrx">Angular and NgRx</a></p>\n<p><a href="angular/get-started#angular-and-ngxs">Angular and NGXS</a></p>\n<h3 id="angular">Angular</h3>\n<p><a href="https://stackblitz.com/edit/state-adapt-angular?file=src%2Fapp%2Fapp.module.ts">StackBlitz Demo</a></p>\n<p>First, <code>npm install</code>:</p>\n<pre><code>npm i -s @state-adapt/{core,rxjs,angular}\n</code></pre>\n<p>Include in <code>app.module.ts</code> or <code>main.ts</code> like this:</p>\n<pre><code class="language-typescript">import { defaultStoreProvider } from &#39;@state-adapt/angular&#39;;\n// ...\n    providers: [defaultStoreProvider],\n</code></pre>\n<p>Now in a component or service:</p>\n<pre><code class="language-typescript">import { adapt } from &#39;@state-adapt/angular&#39;;\n// ...\nstringStore = adapt(&#39;string&#39;, &#39;&#39;);\n</code></pre>\n<p>For more configuration options, see <a href="javascript:document.dispatchEvent(new CustomEvent(\'routeTo\', {detail: \'/docs/angular\'})); void(0)">@state-adapt/angular</a>.</p>\n<p>Go to <a href="angular/get-started#tutorials">Tutorials</a> for help on how to use StateAdapt after setup.</p>\n<h3 id="angular-and-ngrx">Angular and NgRx</h3>\n<p><a href="https://stackblitz.com/edit/state-adapt-angular-with-ngrx?file=src%2Fapp%2Fapp.module.ts">StackBlitz Demo</a></p>\n<p>First, <code>npm install</code>:</p>\n<pre><code>npm i -s @state-adapt/{core,rxjs,angular,ngrx}\n</code></pre>\n<p>Include in <code>app.module.ts</code> or <code>main.ts</code> like this:</p>\n<pre><code class="language-diff-typescript">import { StoreModule } from &#39;@ngrx/store&#39;;\nimport { StoreDevtoolsModule } from &#39;@ngrx/store-devtools&#39;;\n+import { adaptReducer, actionSanitizer, stateSanitizer } from &#39;@state-adapt/core&#39;;\n// ...\n// In your module imports array:\n    StoreModule.forRoot({ adapt: adaptReducer }),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n+      actionSanitizer,\n+      stateSanitizer,\n    }),\n</code></pre>\n<p>Now in a component or service:</p>\n<pre><code class="language-typescript">import { adaptNgrx } from &#39;@state-adapt/ngrx&#39;;\n// ...\nstringStore = adaptNgrx(&#39;string&#39;, &#39;&#39;);\n</code></pre>\n<p>Go to <a href="angular/get-started#tutorials">Tutorials</a> for help on how to use StateAdapt after setup.</p>\n<h3 id="angular-and-ngxs">Angular and NGXS</h3>\n<p><a href="https://stackblitz.com/edit/state-adapt-angular-with-ngxs?file=src%2Fapp%2Fapp.module.ts">StackBlitz Demo</a></p>\n<p>First, <code>npm install</code>:</p>\n<pre><code>npm i -s @state-adapt/{core,rxjs,angular,ngxs}\n</code></pre>\n<p>Include in <code>app.module.ts</code> or <code>main.ts</code> like this:</p>\n<pre><code class="language-diff-typescript">import { NgxsModule } from &#39;@ngxs/store&#39;;\nimport { NgxsReduxDevtoolsPluginModule } from &#39;@ngxs/devtools-plugin&#39;;\n+import { actionSanitizer, stateSanitizer } from &#39;@state-adapt/core&#39;;\n+import { AdaptState } from &#39;@state-adapt/ngxs&#39;;\n// ...\n// In your module imports array:\n+    NgxsModule.forRoot([AdaptState], {\n      developmentMode: !environment.production\n    }),\n    NgxsReduxDevtoolsPluginModule.forRoot({\n      disabled: environment.production,\n+      actionSanitizer,\n+      stateSanitizer,\n    }),\n</code></pre>\n<p>Now in a component or service:</p>\n<pre><code class="language-typescript">import { adaptNgxs } from &#39;@state-adapt/ngxs&#39;;\n// ...\nstringStore = adaptNgxs(&#39;string&#39;, &#39;&#39;);\n</code></pre>\n<p>Go to <a href="angular/get-started#tutorials">Tutorials</a> for help on how to use StateAdapt after setup.</p>\n'}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["sa-get-started-angular"]],standalone:!0,features:[t._Bn([{provide:"framework",useValue:"angular"}]),t.jDz],decls:2,vars:1,consts:[[3,"html"]],template:function(n,l){1&n&&(t.TgZ(0,"sa-content"),t._UZ(1,"sa-html",0),t.qZA()),2&n&&(t.xp6(1),t.Q6J("html",l.html))},dependencies:[s.S,p.XB],encapsulation:2}),e})()}}]);