import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.DjwDO6w3.js";const c=JSON.parse('{"title":"Function: provideStore()","description":"","frontmatter":{},"headers":[],"relativePath":"api/angular/index/provideStore.md","filePath":"api/angular/index/provideStore.md"}'),p={name:"api/angular/index/provideStore.md"};function e(l,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="function-providestore" tabindex="-1">Function: provideStore() <a class="header-anchor" href="#function-providestore" aria-label="Permalink to &quot;Function: provideStore()&quot;">​</a></h1><blockquote><p><strong>provideStore</strong>(<code>options</code>): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/state-adapt/state-adapt/blob/4ff8540684d6d76a52452612f8fa44ffd7c6016a/libs/angular/src/lib/provide-store.function.ts#L57" target="_blank" rel="noreferrer">lib/provide-store.function.ts:57</a></p><p><code>provideStore</code> takes in a <a href="./../../rxjs/index/ConfigureStateAdaptOptions.html">ConfigureStateAdaptOptions</a> object and returns a provider for <a href="./../../rxjs/index/StateAdapt.html">StateAdapt</a> that you can add to the <code>providers</code> array in your <code>AppModule</code> or <code>main.ts</code> file to make <a href="./adapt.html">adapt</a> and <a href="./watch.html">watch</a> available to use in your components and services.</p><h4 id="example-using-providestore-in-appmodule-for-devtools-setup-without-selectors" tabindex="-1">Example: Using <code>provideStore</code> in AppModule for devtools setup without selectors <a class="header-anchor" href="#example-using-providestore-in-appmodule-for-devtools-setup-without-selectors" aria-label="Permalink to &quot;Example: Using \`provideStore\` in AppModule for devtools setup without selectors&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">NgModule</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@angular/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">BrowserModule</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@angular/platform-browser&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">actionSanitizer</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">stateSanitizer</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">provideStore</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/angular&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">AppComponent</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;./app.component&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">@</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">NgModule</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">({</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  imports</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> [</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">BrowserModule</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">],</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  declarations</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> [</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">AppComponent</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">],</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  providers</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> [</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">    provideStore</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">({</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">      devtools</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> (</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">window</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;"> as</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;"> any</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">)?.</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">__REDUX_DEVTOOLS_EXTENSION__</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">?.({</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">        actionSanitizer</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">        stateSanitizer</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">      }),</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">      showSelectors</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#0000FF;"> false</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">    }),</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">  ],</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">})</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">export</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> class</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#267F99;"> AppModule</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> {}</span></span></code></pre></div><h4 id="example-using-providestore-in-a-main-ts-file-for-no-devtools" tabindex="-1">Example: Using <code>provideStore</code> in a main.ts file for no devtools <a class="header-anchor" href="#example-using-providestore-in-a-main-ts-file-for-no-devtools" aria-label="Permalink to &quot;Example: Using \`provideStore\` in a main.ts file for no devtools&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">bootstrapApplication</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@angular/platform-browser&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">actionSanitizer</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">stateSanitizer</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">provideStore</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/angular&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">AppComponent</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;./app/app.component&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">bootstrapApplication</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">AppComponent</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, {</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  providers</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> [</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">    provideStore</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">({}),</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">    // ...</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">  ]</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">});</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><p><a href="./../../rxjs/index/ConfigureStateAdaptOptions.html"><code>ConfigureStateAdaptOptions</code></a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="provide" tabindex="-1">provide <a class="header-anchor" href="#provide" aria-label="Permalink to &quot;provide&quot;">​</a></h3><blockquote><p><strong>provide</strong>: <em>typeof</em> <a href="./../../rxjs/index/StateAdapt.html"><code>StateAdapt</code></a> = <code>StateAdapt</code></p></blockquote><h3 id="usevalue" tabindex="-1">useValue <a class="header-anchor" href="#usevalue" aria-label="Permalink to &quot;useValue&quot;">​</a></h3><blockquote><p><strong>useValue</strong>: <code>Pick</code>&lt;<a href="./../../rxjs/index/StateAdapt.html"><code>StateAdapt</code></a>&lt;<code>any</code>&gt;, <code>&quot;adapt&quot;</code> | <code>&quot;watch&quot;</code>&gt;</p></blockquote>`,17)]))}const F=i(p,[["render",e]]);export{c as __pageData,F as default};
