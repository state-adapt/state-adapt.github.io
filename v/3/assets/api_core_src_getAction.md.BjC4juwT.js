import{_ as e,c as t,o as i,ag as s}from"./chunks/framework.DjwDO6w3.js";const k=JSON.parse('{"title":"Function: getAction()","description":"","frontmatter":{"definedIn":"https://github.com/state-adapt/state-adapt/blob/4e457fa33331f265d75eaddb646761782498dd8e/libs/core/src/lib/actions/get-action.function.ts#L16"},"headers":[],"relativePath":"api/core/src/getAction.md","filePath":"api/core/src/getAction.md"}'),n={name:"api/core/src/getAction.md"};function o(r,a,l,p,c,d){return i(),t("div",null,a[0]||(a[0]=[s(`<h1 id="function-getaction" tabindex="-1">Function: getAction() <a class="header-anchor" href="#function-getaction" aria-label="Permalink to &quot;Function: getAction()&quot;">​</a></h1><h2 id="call-signature" tabindex="-1">Call Signature <a class="header-anchor" href="#call-signature" aria-label="Permalink to &quot;Call Signature&quot;">​</a></h2><blockquote><p><strong>getAction</strong>&lt;<code>Type</code>&gt;(<code>type</code>): <a href="./Action.html"><code>Action</code></a>&lt;<code>void</code>, <code>Type</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/state-adapt/state-adapt/blob/4e457fa33331f265d75eaddb646761782498dd8e/libs/core/src/lib/actions/get-action.function.ts#L16" target="_blank" rel="noreferrer">src/lib/actions/get-action.function.ts:16</a></p><p><code>getAction</code> is a function that takes in an action <a href="#getactiontype">Type</a> and optionally Payload and creates an <a href="./Action.html">Action</a> object.</p><h4 id="example-creating-an-action-with-a-payload" tabindex="-1">Example: Creating an action with a payload <a class="header-anchor" href="#example-creating-an-action-with-a-payload" aria-label="Permalink to &quot;Example: Creating an action with a payload&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">getAction</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;"> action</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">getAction</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;">&#39;ADD&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">1</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// action = { type: &#39;ADD&#39;, payload: 1 }</span></span></code></pre></div><h3 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><h4 id="type" tabindex="-1">Type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;Type&quot;">​</a></h4><p><code>Type</code> <em>extends</em> <code>string</code></p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><h4 id="type-1" tabindex="-1">type <a class="header-anchor" href="#type-1" aria-label="Permalink to &quot;type&quot;">​</a></h4><p><code>Type</code></p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./Action.html"><code>Action</code></a>&lt;<code>void</code>, <code>Type</code>&gt;</p><h2 id="call-signature-1" tabindex="-1">Call Signature <a class="header-anchor" href="#call-signature-1" aria-label="Permalink to &quot;Call Signature&quot;">​</a></h2><blockquote><p><strong>getAction</strong>&lt;<code>Type</code>, <code>Payload</code>&gt;(<code>type</code>, <code>payload</code>): <a href="./Action.html"><code>Action</code></a>&lt;<code>Payload</code>, <code>Type</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/state-adapt/state-adapt/blob/4e457fa33331f265d75eaddb646761782498dd8e/libs/core/src/lib/actions/get-action.function.ts#L17" target="_blank" rel="noreferrer">src/lib/actions/get-action.function.ts:17</a></p><p><code>getAction</code> is a function that takes in an action <a href="#getactiontype">Type</a> and optionally Payload and creates an <a href="./Action.html">Action</a> object.</p><h4 id="example-creating-an-action-with-a-payload-1" tabindex="-1">Example: Creating an action with a payload <a class="header-anchor" href="#example-creating-an-action-with-a-payload-1" aria-label="Permalink to &quot;Example: Creating an action with a payload&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">getAction</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;"> action</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">getAction</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;">&#39;ADD&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">1</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// action = { type: &#39;ADD&#39;, payload: 1 }</span></span></code></pre></div><h3 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><h4 id="type-2" tabindex="-1">Type <a class="header-anchor" href="#type-2" aria-label="Permalink to &quot;Type&quot;">​</a></h4><p><code>Type</code> <em>extends</em> <code>string</code></p><h4 id="payload" tabindex="-1">Payload <a class="header-anchor" href="#payload" aria-label="Permalink to &quot;Payload&quot;">​</a></h4><p><code>Payload</code></p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><h4 id="type-3" tabindex="-1">type <a class="header-anchor" href="#type-3" aria-label="Permalink to &quot;type&quot;">​</a></h4><p><code>Type</code></p><h4 id="payload-1" tabindex="-1">payload <a class="header-anchor" href="#payload-1" aria-label="Permalink to &quot;payload&quot;">​</a></h4><p><code>Payload</code></p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./Action.html"><code>Action</code></a>&lt;<code>Payload</code>, <code>Type</code>&gt;</p>`,33)]))}const y=e(n,[["render",o]]);export{k as __pageData,y as default};
