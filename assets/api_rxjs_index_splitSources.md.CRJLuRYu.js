import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.Zc4NuDMF.js";const c=JSON.parse('{"title":"Function: splitSources()","description":"","frontmatter":{"definedIn":"https://github.com/state-adapt/state-adapt/blob/4e457fa33331f265d75eaddb646761782498dd8e/libs/rxjs/src/lib/sources/split-sources.function.ts#L77"},"headers":[],"relativePath":"api/rxjs/index/splitSources.md","filePath":"api/rxjs/index/splitSources.md"}'),e={name:"api/rxjs/index/splitSources.md"};function h(l,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="function-splitsources" tabindex="-1">Function: splitSources() <a class="header-anchor" href="#function-splitsources" aria-label="Permalink to &quot;Function: splitSources()&quot;">​</a></h1><blockquote><p><strong>splitSources</strong>&lt;<code>CommonAction</code>, <code>Aliases</code>&gt;(<code>source$</code>, <code>partitions?</code>): { [K in string | number | symbol]: ActionMap&lt;CommonAction&gt;[Aliases[K]] } &amp; <code>ActionMap</code>&lt;<code>CommonAction</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/state-adapt/state-adapt/blob/4e457fa33331f265d75eaddb646761782498dd8e/libs/rxjs/src/lib/sources/split-sources.function.ts#L77" target="_blank" rel="noreferrer">libs/rxjs/src/lib/sources/split-sources.function.ts:77</a></p><p><code>splitSources</code> is a function that takes in an <a href="https://rxjs.dev/guide/observable" target="_blank" rel="noreferrer">Observable</a> that emits multiple types of <a href="./../../core/src/Action.html">Action</a> objects and splits it into a source for each <a href="./../../core/src/Action.html">Action</a> type. It takes two arguments:</p><ul><li><code>source$</code>: <a href="https://rxjs.dev/guide/observable" target="_blank" rel="noreferrer">Observable</a>&lt;<a href="#splitsourcescommonaction">CommonAction</a>&gt;</li><li><code>aliases?</code>: <a href="#splitsourcesaliases">Aliases</a> extends { [index: string]: CommonType } — An optional object with keys that will become the new source names, and values that will filter against the <code>type</code> property of the actions from the <code>source$</code> observable.</li></ul><p>It returns a proxy object that defines keys from the source types and the <code>aliases</code> argument (if provided), and values of type <a href="https://rxjs.dev/guide/observable" target="_blank" rel="noreferrer">Observable</a>&lt;<a href="./../../core/src/Action.html">Action</a>&lt;<code>Payload</code>, <code>Type</code>&gt;&gt; where <code>Payload</code> and <code>Type</code> are inferred from the filtered <code>CommonAction</code> type.</p><p>If the source type is specific (as in <code>&#39;even$&#39; | &#39;odd$&#39;</code>), the returned object will have <code>&#39;even$&#39;</code> and <code>&#39;odd$&#39;</code> properties. If the source type is just a string, any string can be accessed, and splitSources will filter against that string. The proxy defines this filtered source once the property is accessed.</p><h4 id="example-splitting-a-source-into-multiple-sources" tabindex="-1">Example: Splitting a source into multiple sources <a class="header-anchor" href="#example-splitting-a-source-into-multiple-sources" aria-label="Permalink to &quot;Example: Splitting a source into multiple sources&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">getAction</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">splitSources</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/rxjs&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">interval</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">map</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;rxjs&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;"> evenAndOdd$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">interval</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">1000</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">).</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">pipe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  map</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">n</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> =&gt;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> ({</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">    // type has to be &#39;even$&#39; | &#39;odd$&#39;, not just a string</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">    type</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> n</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> % </span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">2</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> === </span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#098658;">0</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#000000;"> ?</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> (</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;">&#39;even$&#39;</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;"> as</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> const</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">) </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#000000;">:</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> (</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;">&#39;odd$&#39;</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;"> as</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> const</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">),</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">    payload</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> n</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">  })),</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">evenAndOdd$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">subscribe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">console</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">log</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;even$&#39;, payload: 0 }</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;odd$&#39;, payload: 1 }</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;even$&#39;, payload: 2 }</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;odd$&#39;, payload: 3 }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;">even$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;">odd$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">splitSources</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">evenAndOdd$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">even$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">subscribe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">console</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">log</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;even$&#39;, payload: 0 }</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;even$&#39;, payload: 2 }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">odd$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">subscribe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">console</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">log</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;odd$&#39;, payload: 1 }</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;odd$&#39;, payload: 3 }</span></span></code></pre></div><h4 id="example-splitting-an-http-source-using-aliases" tabindex="-1">Example: Splitting an HTTP source using aliases <a class="header-anchor" href="#example-splitting-an-http-source-using-aliases" aria-label="Permalink to &quot;Example: Splitting an HTTP source using aliases&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes sa-dark light-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">getAction</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/core&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">toSource</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">splitSources</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;@state-adapt/rxjs&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">import</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">ajax</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } </span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;">from</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;rxjs/ajax&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;"> http$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">ajax</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;">&#39;https://jsonplaceholder.typicode.com/todos/1&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">).</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">pipe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  map</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">res</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> =&gt;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> ({ </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">type</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;todos.success$&#39;</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;"> as</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> const</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">payload</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> res</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> })),</span></span>
<span class="line"><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">  catchError</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">error</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> =&gt;</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;"> of</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">({ </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">type</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;todos.error$&#39;</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#AF00DB;"> as</span><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;"> const</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">payload</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;"> error</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> })),</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:var(--vp-c-brand-1);--shiki-light:#0000FF;">const</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> { </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;">success$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, </span><span style="--shiki-dark:var(--vp-c-brand-3-light-5);--shiki-light:#0070C1;">error$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;"> } = </span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">splitSources</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">http$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">, {</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  success$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;todos.success$&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">  error$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#001080;">:</span><span style="--shiki-dark:var(--vp-c-brand-2-light-4);--shiki-light:#A31515;"> &#39;todos.error$&#39;</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">success$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">subscribe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">console</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">log</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;success$&#39;, payload: { ... } }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">error$</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#00DAEF;--shiki-light:#795E26;">subscribe</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">(</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">console</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">.</span><span style="--shiki-dark:#4BF3C8;--shiki-light:#001080;">log</span><span style="--shiki-dark:#EEF0F9;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">// { type: &#39;error$&#39;, payload: { ... } }</span></span></code></pre></div><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="commonaction" tabindex="-1">CommonAction <a class="header-anchor" href="#commonaction" aria-label="Permalink to &quot;CommonAction&quot;">​</a></h3><p><code>CommonAction</code> <em>extends</em> <code>object</code></p><h3 id="aliases" tabindex="-1">Aliases <a class="header-anchor" href="#aliases" aria-label="Permalink to &quot;Aliases&quot;">​</a></h3><p><code>Aliases</code> <em>extends</em> <code>object</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="source" tabindex="-1">source$ <a class="header-anchor" href="#source" aria-label="Permalink to &quot;source$&quot;">​</a></h3><p><code>Observable</code>&lt;<code>CommonAction</code>&gt;</p><h3 id="partitions" tabindex="-1">partitions? <a class="header-anchor" href="#partitions" aria-label="Permalink to &quot;partitions?&quot;">​</a></h3><p><code>Aliases</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p>{ [K in string | number | symbol]: ActionMap&lt;CommonAction&gt;[Aliases[K]] } &amp; <code>ActionMap</code>&lt;<code>CommonAction</code>&gt;</p>`,23)]))}const F=i(e,[["render",h]]);export{c as __pageData,F as default};
